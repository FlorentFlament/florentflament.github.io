<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Florent Flament's Tech Blog</title><link href="http://www.florentflament.com/blog/" rel="alternate"></link><link href="http://www.florentflament.com/blog/feeds/florent-flament.atom.xml" rel="self"></link><id>http://www.florentflament.com/blog/</id><updated>2015-05-09T00:00:00+02:00</updated><entry><title>Inkjet versus laser printer</title><link href="http://www.florentflament.com/blog/inkjet-versus-laser-printer.html" rel="alternate"></link><updated>2015-05-09T00:00:00+02:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2015-05-09:blog/inkjet-versus-laser-printer.html</id><summary type="html">&lt;p&gt;Contrary to what I found on most websites when googling about
comparisons between inkjet and laser printers, the cost per page on
high end inkjet printers is lower than that of laser printers.&lt;/p&gt;
&lt;p&gt;Moreover, when buying a new printer one has to consider the number of
pages that will be printed to estimate whether the savings done on the
cost per page offset the extra initial cost of the printer or not.&lt;/p&gt;
&lt;h2&gt;Computing cost per page&lt;/h2&gt;
&lt;p&gt;In order to find out the printer that best fit my usage, I computed
the cost per page of every HP multifunction printer with a price lower
than $1000 (as of the April 26th 2015). Then I computed the overall
cost of a printer that would print 3000 black and white pages (Cost of
printer + 3000 * cost per black page). Prices are computed based on
&lt;a href="http://store.hp.com/webapp/wcs/stores/servlet/us/en/vwa/printers"&gt;HP printers and cartridges official prices&lt;/a&gt;. I considered HP
printers, because most of them are &lt;a href="http://hplipopensource.com/hplip-web/supported_devices/index.html"&gt;working under Linux&lt;/a&gt;. As for
the number of pages, this is a rough estimate of my usage over 5 years
(my estimate of the life span of a printer).&lt;/p&gt;
&lt;p&gt;Cost per page and for 3000 pages:&lt;/p&gt;
&lt;style type="text/css"&gt;
    table,thead,tbody,tfoot,tr,th,td { font-family:"Liberation Sans"; font-size:x-small }
&lt;/style&gt;

&lt;table cellspacing="0" border="1"&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;&lt;br&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;br&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;br&gt;&lt;/td&gt;
        &lt;td align="center" colspan="6"&gt;Cartridges&lt;/td&gt;
        &lt;td align="left"&gt;&lt;br&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;br&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;br&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;Printer&lt;/td&gt;
        &lt;td align="left"&gt;Price ($)&lt;/td&gt;
        &lt;td align="left"&gt;Type&lt;/td&gt;
        &lt;td align="left"&gt;Black ref&lt;/td&gt;
        &lt;td align="left"&gt;Black price ($)&lt;/td&gt;
        &lt;td align="left"&gt;Black pages&lt;/td&gt;
        &lt;td align="left"&gt;Color ref&lt;/td&gt;
        &lt;td align="left"&gt;Color price ($)&lt;/td&gt;
        &lt;td align="left"&gt;Color pages&lt;/td&gt;
        &lt;td align="left"&gt;$ / black page&lt;/td&gt;
        &lt;td align="left"&gt;$ / color page&lt;/td&gt;
        &lt;td align="left"&gt;Price for 3000 pages&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Enterprise Color MFP X585dn&lt;/td&gt;
        &lt;td align="right" sdval="999.99" sdnum="1033;"&gt;999.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;980&lt;/td&gt;
        &lt;td align="right" sdval="113.99" sdnum="1033;"&gt;113.99&lt;/td&gt;
        &lt;td align="right" sdval="10000" sdnum="1033;"&gt;10000&lt;/td&gt;
        &lt;td align="left"&gt;980&lt;/td&gt;
        &lt;td align="right" sdval="97.99" sdnum="1033;"&gt;97.99&lt;/td&gt;
        &lt;td align="right" sdval="6600" sdnum="1033;"&gt;6600&lt;/td&gt;
        &lt;td align="right" sdval="1.1399" sdnum="1033;0;0.0"&gt;1.1&lt;/td&gt;
        &lt;td align="right" sdval="1.48469696969697" sdnum="1033;0;0.0"&gt;1.5&lt;/td&gt;
        &lt;td align="right" sdval="1034.187" sdnum="1033;0;0"&gt;1034&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro X476dn&lt;/td&gt;
        &lt;td align="right" sdval="324.98" sdnum="1033;"&gt;324.98&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;970XL&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="right" sdval="9200" sdnum="1033;"&gt;9200&lt;/td&gt;
        &lt;td align="left"&gt;971XL&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="right" sdval="6600" sdnum="1033;"&gt;6600&lt;/td&gt;
        &lt;td align="right" sdval="1.30423913043478" sdnum="1033;0;0.0"&gt;1.3&lt;/td&gt;
        &lt;td align="right" sdval="1.8180303030303" sdnum="1033;0;0.0"&gt;1.8&lt;/td&gt;
        &lt;td align="right" sdval="364.107173913043" sdnum="1033;0;0"&gt;364&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro X476dw&lt;/td&gt;
        &lt;td align="right" sdval="349.98" sdnum="1033;"&gt;349.98&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;970XL&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="right" sdval="9200" sdnum="1033;"&gt;9200&lt;/td&gt;
        &lt;td align="left"&gt;971XL&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="right" sdval="6600" sdnum="1033;"&gt;6600&lt;/td&gt;
        &lt;td align="right" sdval="1.30423913043478" sdnum="1033;0;0.0"&gt;1.3&lt;/td&gt;
        &lt;td align="right" sdval="1.8180303030303" sdnum="1033;0;0.0"&gt;1.8&lt;/td&gt;
        &lt;td align="right" sdval="389.107173913043" sdnum="1033;0;0"&gt;389&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro X576dw &lt;/td&gt;
        &lt;td align="right" sdval="399.98" sdnum="1033;"&gt;399.98&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;970XL&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="right" sdval="9200" sdnum="1033;"&gt;9200&lt;/td&gt;
        &lt;td align="left"&gt;971XL&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="right" sdval="6600" sdnum="1033;"&gt;6600&lt;/td&gt;
        &lt;td align="right" sdval="1.30423913043478" sdnum="1033;0;0.0"&gt;1.3&lt;/td&gt;
        &lt;td align="right" sdval="1.8180303030303" sdnum="1033;0;0.0"&gt;1.8&lt;/td&gt;
        &lt;td align="right" sdval="439.107173913044" sdnum="1033;0;0"&gt;439&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro 8610 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="129.99" sdnum="1033;"&gt;129.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;950XL&lt;/td&gt;
        &lt;td align="right" sdval="36.99" sdnum="1033;"&gt;36.99&lt;/td&gt;
        &lt;td align="right" sdval="2300" sdnum="1033;"&gt;2300&lt;/td&gt;
        &lt;td align="left"&gt;951XL&lt;/td&gt;
        &lt;td align="right" sdval="27.99" sdnum="1033;"&gt;27.99&lt;/td&gt;
        &lt;td align="right" sdval="1500" sdnum="1033;"&gt;1500&lt;/td&gt;
        &lt;td align="right" sdval="1.60826086956522" sdnum="1033;0;0.0"&gt;1.6&lt;/td&gt;
        &lt;td align="right" sdval="1.866" sdnum="1033;0;0.0"&gt;1.9&lt;/td&gt;
        &lt;td align="right" sdval="178.237826086957" sdnum="1033;0;0"&gt;178&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro 8620 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="199.99" sdnum="1033;"&gt;199.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;950XL&lt;/td&gt;
        &lt;td align="right" sdval="36.99" sdnum="1033;"&gt;36.99&lt;/td&gt;
        &lt;td align="right" sdval="2300" sdnum="1033;"&gt;2300&lt;/td&gt;
        &lt;td align="left"&gt;951XL&lt;/td&gt;
        &lt;td align="right" sdval="27.99" sdnum="1033;"&gt;27.99&lt;/td&gt;
        &lt;td align="right" sdval="1500" sdnum="1033;"&gt;1500&lt;/td&gt;
        &lt;td align="right" sdval="1.60826086956522" sdnum="1033;0;0.0"&gt;1.6&lt;/td&gt;
        &lt;td align="right" sdval="1.866" sdnum="1033;0;0.0"&gt;1.9&lt;/td&gt;
        &lt;td align="right" sdval="248.237826086957" sdnum="1033;0;0"&gt;248&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro 8630 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="279.99" sdnum="1033;"&gt;279.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;950XL&lt;/td&gt;
        &lt;td align="right" sdval="36.99" sdnum="1033;"&gt;36.99&lt;/td&gt;
        &lt;td align="right" sdval="2300" sdnum="1033;"&gt;2300&lt;/td&gt;
        &lt;td align="left"&gt;951XL&lt;/td&gt;
        &lt;td align="right" sdval="27.99" sdnum="1033;"&gt;27.99&lt;/td&gt;
        &lt;td align="right" sdval="1500" sdnum="1033;"&gt;1500&lt;/td&gt;
        &lt;td align="right" sdval="1.60826086956522" sdnum="1033;0;0.0"&gt;1.6&lt;/td&gt;
        &lt;td align="right" sdval="1.866" sdnum="1033;0;0.0"&gt;1.9&lt;/td&gt;
        &lt;td align="right" sdval="328.237826086957" sdnum="1033;0;0"&gt;328&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro 276dw&lt;/td&gt;
        &lt;td align="right" sdval="399.99" sdnum="1033;"&gt;399.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;950XL&lt;/td&gt;
        &lt;td align="right" sdval="36.99" sdnum="1033;"&gt;36.99&lt;/td&gt;
        &lt;td align="right" sdval="2300" sdnum="1033;"&gt;2300&lt;/td&gt;
        &lt;td align="left"&gt;951XL&lt;/td&gt;
        &lt;td align="right" sdval="27.99" sdnum="1033;"&gt;27.99&lt;/td&gt;
        &lt;td align="right" sdval="1500" sdnum="1033;"&gt;1500&lt;/td&gt;
        &lt;td align="right" sdval="1.60826086956522" sdnum="1033;0;0.0"&gt;1.6&lt;/td&gt;
        &lt;td align="right" sdval="1.866" sdnum="1033;0;0.0"&gt;1.9&lt;/td&gt;
        &lt;td align="right" sdval="448.237826086957" sdnum="1033;0;0"&gt;448&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP LaserJet Pro MFP M521dn&lt;/td&gt;
        &lt;td align="right" sdval="649.99" sdnum="1033;"&gt;649.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;55X&lt;/td&gt;
        &lt;td align="right" sdval="227.99" sdnum="1033;"&gt;227.99&lt;/td&gt;
        &lt;td align="right" sdval="13000" sdnum="1033;"&gt;13000&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="1.75376923076923" sdnum="1033;0;0.0"&gt;1.8&lt;/td&gt;
        &lt;td align="right" sdval="0" sdnum="1033;0;0.0"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="702.603076923077" sdnum="1033;0;0"&gt;703&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP LaserJet Pro 500 color MFP M570dn&lt;/td&gt;
        &lt;td align="right" sdval="749.99" sdnum="1033;"&gt;749.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;507X&lt;/td&gt;
        &lt;td align="right" sdval="199.99" sdnum="1033;"&gt;199.99&lt;/td&gt;
        &lt;td align="right" sdval="11000" sdnum="1033;"&gt;11000&lt;/td&gt;
        &lt;td align="left"&gt;507A&lt;/td&gt;
        &lt;td align="right" sdval="223.99" sdnum="1033;"&gt;223.99&lt;/td&gt;
        &lt;td align="right" sdval="6000" sdnum="1033;"&gt;6000&lt;/td&gt;
        &lt;td align="right" sdval="1.81809090909091" sdnum="1033;0;0.0"&gt;1.8&lt;/td&gt;
        &lt;td align="right" sdval="3.73316666666667" sdnum="1033;0;0.0"&gt;3.7&lt;/td&gt;
        &lt;td align="right" sdval="804.532727272727" sdnum="1033;0;0"&gt;805&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Color LaserJet Pro MFP M476nw&lt;/td&gt;
        &lt;td align="right" sdval="529.99" sdnum="1033;"&gt;529.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;312X&lt;/td&gt;
        &lt;td align="right" sdval="111.99" sdnum="1033;"&gt;111.99&lt;/td&gt;
        &lt;td align="right" sdval="4400" sdnum="1033;"&gt;4400&lt;/td&gt;
        &lt;td align="left"&gt;312A&lt;/td&gt;
        &lt;td align="right" sdval="122.99" sdnum="1033;"&gt;122.99&lt;/td&gt;
        &lt;td align="right" sdval="2700" sdnum="1033;"&gt;2700&lt;/td&gt;
        &lt;td align="right" sdval="2.54522727272727" sdnum="1033;0;0.0"&gt;2.5&lt;/td&gt;
        &lt;td align="right" sdval="4.55518518518519" sdnum="1033;0;0.0"&gt;4.6&lt;/td&gt;
        &lt;td align="right" sdval="606.346818181818" sdnum="1033;0;0"&gt;606&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Color LaserJet Pro MFP M476dn&lt;/td&gt;
        &lt;td align="right" sdval="629.99" sdnum="1033;"&gt;629.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;312X&lt;/td&gt;
        &lt;td align="right" sdval="111.99" sdnum="1033;"&gt;111.99&lt;/td&gt;
        &lt;td align="right" sdval="4400" sdnum="1033;"&gt;4400&lt;/td&gt;
        &lt;td align="left"&gt;312A&lt;/td&gt;
        &lt;td align="right" sdval="122.99" sdnum="1033;"&gt;122.99&lt;/td&gt;
        &lt;td align="right" sdval="2700" sdnum="1033;"&gt;2700&lt;/td&gt;
        &lt;td align="right" sdval="2.54522727272727" sdnum="1033;0;0.0"&gt;2.5&lt;/td&gt;
        &lt;td align="right" sdval="4.55518518518519" sdnum="1033;0;0.0"&gt;4.6&lt;/td&gt;
        &lt;td align="right" sdval="706.346818181818" sdnum="1033;0;0"&gt;706&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Color LaserJet Pro MFP M476dw&lt;/td&gt;
        &lt;td align="right" sdval="679.99" sdnum="1033;"&gt;679.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;312X&lt;/td&gt;
        &lt;td align="right" sdval="111.99" sdnum="1033;"&gt;111.99&lt;/td&gt;
        &lt;td align="right" sdval="4400" sdnum="1033;"&gt;4400&lt;/td&gt;
        &lt;td align="left"&gt;312A&lt;/td&gt;
        &lt;td align="right" sdval="122.99" sdnum="1033;"&gt;122.99&lt;/td&gt;
        &lt;td align="right" sdval="2700" sdnum="1033;"&gt;2700&lt;/td&gt;
        &lt;td align="right" sdval="2.54522727272727" sdnum="1033;0;0.0"&gt;2.5&lt;/td&gt;
        &lt;td align="right" sdval="4.55518518518519" sdnum="1033;0;0.0"&gt;4.6&lt;/td&gt;
        &lt;td align="right" sdval="756.346818181818" sdnum="1033;0;0"&gt;756&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP LaserJet Pro 400 MFP M425dn&lt;/td&gt;
        &lt;td align="right" sdval="399.99" sdnum="1033;"&gt;399.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;80X&lt;/td&gt;
        &lt;td align="right" sdval="178.99" sdnum="1033;"&gt;178.99&lt;/td&gt;
        &lt;td align="right" sdval="6900" sdnum="1033;"&gt;6900&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="2.59405797101449" sdnum="1033;0;0.0"&gt;2.6&lt;/td&gt;
        &lt;td align="right" sdval="0" sdnum="1033;0;0.0"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="477.811739130435" sdnum="1033;0;0"&gt;478&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet Pro 6830 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;934XL&lt;/td&gt;
        &lt;td align="right" sdval="29.99" sdnum="1033;"&gt;29.99&lt;/td&gt;
        &lt;td align="right" sdval="1000" sdnum="1033;"&gt;1000&lt;/td&gt;
        &lt;td align="left"&gt;935XL&lt;/td&gt;
        &lt;td align="right" sdval="56.97" sdnum="1033;"&gt;56.97&lt;/td&gt;
        &lt;td align="right" sdval="825" sdnum="1033;"&gt;825&lt;/td&gt;
        &lt;td align="right" sdval="2.999" sdnum="1033;0;0.0"&gt;3.0&lt;/td&gt;
        &lt;td align="right" sdval="6.90545454545455" sdnum="1033;0;0.0"&gt;6.9&lt;/td&gt;
        &lt;td align="right" sdval="209.96" sdnum="1033;0;0"&gt;210&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet 7612 Wide Format e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="249.99" sdnum="1033;"&gt;249.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;932XL&lt;/td&gt;
        &lt;td align="right" sdval="31.99" sdnum="1033;"&gt;31.99&lt;/td&gt;
        &lt;td align="right" sdval="1000" sdnum="1033;"&gt;1000&lt;/td&gt;
        &lt;td align="left"&gt;933XL&lt;/td&gt;
        &lt;td align="right" sdval="47.97" sdnum="1033;"&gt;47.97&lt;/td&gt;
        &lt;td align="right" sdval="825" sdnum="1033;"&gt;825&lt;/td&gt;
        &lt;td align="right" sdval="3.199" sdnum="1033;0;0.0"&gt;3.2&lt;/td&gt;
        &lt;td align="right" sdval="5.81454545454545" sdnum="1033;0;0.0"&gt;5.8&lt;/td&gt;
        &lt;td align="right" sdval="345.96" sdnum="1033;0;0"&gt;346&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Color LaserJet Pro MFP M277dw&lt;/td&gt;
        &lt;td align="right" sdval="429.99" sdnum="1033;"&gt;429.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;201X&lt;/td&gt;
        &lt;td align="right" sdval="89.99" sdnum="1033;"&gt;89.99&lt;/td&gt;
        &lt;td align="right" sdval="2800" sdnum="1033;"&gt;2800&lt;/td&gt;
        &lt;td align="left"&gt;201X&lt;/td&gt;
        &lt;td align="right" sdval="99.99" sdnum="1033;"&gt;99.99&lt;/td&gt;
        &lt;td align="right" sdval="2300" sdnum="1033;"&gt;2300&lt;/td&gt;
        &lt;td align="right" sdval="3.21392857142857" sdnum="1033;0;0.0"&gt;3.2&lt;/td&gt;
        &lt;td align="right" sdval="4.34739130434783" sdnum="1033;0;0.0"&gt;4.3&lt;/td&gt;
        &lt;td align="right" sdval="526.407857142857" sdnum="1033;0;0"&gt;526&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP LaserJet Pro MFP M225dn&lt;/td&gt;
        &lt;td align="right" sdval="229.99" sdnum="1033;"&gt;229.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;83X&lt;/td&gt;
        &lt;td align="right" sdval="79.99" sdnum="1033;"&gt;79.99&lt;/td&gt;
        &lt;td align="right" sdval="2200" sdnum="1033;"&gt;2200&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="3.63590909090909" sdnum="1033;0;0.0"&gt;3.6&lt;/td&gt;
        &lt;td align="right" sdval="0" sdnum="1033;0;0.0"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="339.067272727273" sdnum="1033;0;0"&gt;339&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP LaserJet Pro MFP M225dw&lt;/td&gt;
        &lt;td align="right" sdval="329.99" sdnum="1033;"&gt;329.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;83X&lt;/td&gt;
        &lt;td align="right" sdval="79.99" sdnum="1033;"&gt;79.99&lt;/td&gt;
        &lt;td align="right" sdval="2200" sdnum="1033;"&gt;2200&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="3.63590909090909" sdnum="1033;0;0.0"&gt;3.6&lt;/td&gt;
        &lt;td align="right" sdval="0" sdnum="1033;0;0.0"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="439.067272727273" sdnum="1033;0;0"&gt;439&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Color LaserJet Pro MFP M177fw&lt;/td&gt;
        &lt;td align="right" sdval="279.99" sdnum="1033;"&gt;279.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;130A&lt;/td&gt;
        &lt;td align="right" sdval="54.99" sdnum="1033;"&gt;54.99&lt;/td&gt;
        &lt;td align="right" sdval="1300" sdnum="1033;"&gt;1300&lt;/td&gt;
        &lt;td align="left"&gt;130A&lt;/td&gt;
        &lt;td align="right" sdval="57.99" sdnum="1033;"&gt;57.99&lt;/td&gt;
        &lt;td align="right" sdval="1000" sdnum="1033;"&gt;1000&lt;/td&gt;
        &lt;td align="right" sdval="4.23" sdnum="1033;0;0.0"&gt;4.2&lt;/td&gt;
        &lt;td align="right" sdval="5.799" sdnum="1033;0;0.0"&gt;5.8&lt;/td&gt;
        &lt;td align="right" sdval="406.89" sdnum="1033;0;0"&gt;407&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP LaserJet Pro MFP M127fn&lt;/td&gt;
        &lt;td align="right" sdval="209.99" sdnum="1033;"&gt;209.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;83A&lt;/td&gt;
        &lt;td align="right" sdval="63.99" sdnum="1033;"&gt;63.99&lt;/td&gt;
        &lt;td align="right" sdval="1500" sdnum="1033;"&gt;1500&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="4.266" sdnum="1033;0;0.0"&gt;4.3&lt;/td&gt;
        &lt;td align="right" sdval="0" sdnum="1033;0;0.0"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="337.97" sdnum="1033;0;0"&gt;338&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP LaserJet Pro MFP M127fw&lt;/td&gt;
        &lt;td align="right" sdval="259.99" sdnum="1033;"&gt;259.99&lt;/td&gt;
        &lt;td align="left"&gt;laser&lt;/td&gt;
        &lt;td align="left"&gt;83A&lt;/td&gt;
        &lt;td align="right" sdval="63.99" sdnum="1033;"&gt;63.99&lt;/td&gt;
        &lt;td align="right" sdval="1500" sdnum="1033;"&gt;1500&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="left"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="4.266" sdnum="1033;0;0.0"&gt;4.3&lt;/td&gt;
        &lt;td align="right" sdval="0" sdnum="1033;0;0.0"&gt;&lt;/td&gt;
        &lt;td align="right" sdval="387.97" sdnum="1033;0;0"&gt;388&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet 5740 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="119.99" sdnum="1033;"&gt;119.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="34.99" sdnum="1033;"&gt;34.99&lt;/td&gt;
        &lt;td align="right" sdval="600" sdnum="1033;"&gt;600&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="38.99" sdnum="1033;"&gt;38.99&lt;/td&gt;
        &lt;td align="right" sdval="415" sdnum="1033;"&gt;415&lt;/td&gt;
        &lt;td align="right" sdval="5.83166666666667" sdnum="1033;0;0.0"&gt;5.8&lt;/td&gt;
        &lt;td align="right" sdval="9.39518072289157" sdnum="1033;0;0.0"&gt;9.4&lt;/td&gt;
        &lt;td align="right" sdval="294.94" sdnum="1033;0;0"&gt;295&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP ENVY 5660 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="149.99" sdnum="1033;"&gt;149.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="34.99" sdnum="1033;"&gt;34.99&lt;/td&gt;
        &lt;td align="right" sdval="600" sdnum="1033;"&gt;600&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="38.99" sdnum="1033;"&gt;38.99&lt;/td&gt;
        &lt;td align="right" sdval="415" sdnum="1033;"&gt;415&lt;/td&gt;
        &lt;td align="right" sdval="5.83166666666667" sdnum="1033;0;0.0"&gt;5.8&lt;/td&gt;
        &lt;td align="right" sdval="9.39518072289157" sdnum="1033;0;0.0"&gt;9.4&lt;/td&gt;
        &lt;td align="right" sdval="324.94" sdnum="1033;0;0"&gt;325&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP ENVY 7640 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="149.99" sdnum="1033;"&gt;149.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="34.99" sdnum="1033;"&gt;34.99&lt;/td&gt;
        &lt;td align="right" sdval="600" sdnum="1033;"&gt;600&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="38.99" sdnum="1033;"&gt;38.99&lt;/td&gt;
        &lt;td align="right" sdval="415" sdnum="1033;"&gt;415&lt;/td&gt;
        &lt;td align="right" sdval="5.83166666666667" sdnum="1033;0;0.0"&gt;5.8&lt;/td&gt;
        &lt;td align="right" sdval="9.39518072289157" sdnum="1033;0;0.0"&gt;9.4&lt;/td&gt;
        &lt;td align="right" sdval="324.94" sdnum="1033;0;0"&gt;325&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet 8040 with Neat e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="349.99" sdnum="1033;"&gt;349.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="34.99" sdnum="1033;"&gt;34.99&lt;/td&gt;
        &lt;td align="right" sdval="600" sdnum="1033;"&gt;600&lt;/td&gt;
        &lt;td align="left"&gt;62XL&lt;/td&gt;
        &lt;td align="right" sdval="38.99" sdnum="1033;"&gt;38.99&lt;/td&gt;
        &lt;td align="right" sdval="415" sdnum="1033;"&gt;415&lt;/td&gt;
        &lt;td align="right" sdval="5.83166666666667" sdnum="1033;0;0.0"&gt;5.8&lt;/td&gt;
        &lt;td align="right" sdval="9.39518072289157" sdnum="1033;0;0.0"&gt;9.4&lt;/td&gt;
        &lt;td align="right" sdval="524.94" sdnum="1033;0;0"&gt;525&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet 150 Mobile All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="399.99" sdnum="1033;"&gt;399.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;94&lt;/td&gt;
        &lt;td align="right" sdval="28.99" sdnum="1033;"&gt;28.99&lt;/td&gt;
        &lt;td align="right" sdval="480" sdnum="1033;"&gt;480&lt;/td&gt;
        &lt;td align="left"&gt;97 eco&lt;/td&gt;
        &lt;td align="right" sdval="40.79" sdnum="1033;"&gt;40.79&lt;/td&gt;
        &lt;td align="right" sdval="532" sdnum="1033;"&gt;532&lt;/td&gt;
        &lt;td align="right" sdval="6.03958333333333" sdnum="1033;0;0.0"&gt;6.0&lt;/td&gt;
        &lt;td align="right" sdval="7.66729323308271" sdnum="1033;0;0.0"&gt;7.7&lt;/td&gt;
        &lt;td align="right" sdval="581.1775" sdnum="1033;0;0"&gt;581&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP ENVY 4500 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="69.99" sdnum="1033;"&gt;69.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="31.99" sdnum="1033;"&gt;31.99&lt;/td&gt;
        &lt;td align="right" sdval="480" sdnum="1033;"&gt;480&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="33.99" sdnum="1033;"&gt;33.99&lt;/td&gt;
        &lt;td align="right" sdval="330" sdnum="1033;"&gt;330&lt;/td&gt;
        &lt;td align="right" sdval="6.66458333333333" sdnum="1033;0;0.0"&gt;6.7&lt;/td&gt;
        &lt;td align="right" sdval="10.3" sdnum="1033;0;0.0"&gt;10.3&lt;/td&gt;
        &lt;td align="right" sdval="269.9275" sdnum="1033;0;0"&gt;270&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Deskjet 2540 All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="79.99" sdnum="1033;"&gt;79.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="31.99" sdnum="1033;"&gt;31.99&lt;/td&gt;
        &lt;td align="right" sdval="480" sdnum="1033;"&gt;480&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="33.99" sdnum="1033;"&gt;33.99&lt;/td&gt;
        &lt;td align="right" sdval="330" sdnum="1033;"&gt;330&lt;/td&gt;
        &lt;td align="right" sdval="6.66458333333333" sdnum="1033;0;0.0"&gt;6.7&lt;/td&gt;
        &lt;td align="right" sdval="10.3" sdnum="1033;0;0.0"&gt;10.3&lt;/td&gt;
        &lt;td align="right" sdval="279.9275" sdnum="1033;0;0"&gt;280&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP Officejet 4630 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="99.99" sdnum="1033;"&gt;99.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="31.99" sdnum="1033;"&gt;31.99&lt;/td&gt;
        &lt;td align="right" sdval="480" sdnum="1033;"&gt;480&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="33.99" sdnum="1033;"&gt;33.99&lt;/td&gt;
        &lt;td align="right" sdval="330" sdnum="1033;"&gt;330&lt;/td&gt;
        &lt;td align="right" sdval="6.66458333333333" sdnum="1033;0;0.0"&gt;6.7&lt;/td&gt;
        &lt;td align="right" sdval="10.3" sdnum="1033;0;0.0"&gt;10.3&lt;/td&gt;
        &lt;td align="right" sdval="299.9275" sdnum="1033;0;0"&gt;300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td align="left"&gt;HP ENVY 5530 e-All-in-One&lt;/td&gt;
        &lt;td align="right" sdval="99.99" sdnum="1033;"&gt;99.99&lt;/td&gt;
        &lt;td align="left"&gt;ink&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="31.99" sdnum="1033;"&gt;31.99&lt;/td&gt;
        &lt;td align="right" sdval="480" sdnum="1033;"&gt;480&lt;/td&gt;
        &lt;td align="left"&gt;61XL&lt;/td&gt;
        &lt;td align="right" sdval="33.99" sdnum="1033;"&gt;33.99&lt;/td&gt;
        &lt;td align="right" sdval="330" sdnum="1033;"&gt;330&lt;/td&gt;
        &lt;td align="right" sdval="6.66458333333333" sdnum="1033;0;0.0"&gt;6.7&lt;/td&gt;
        &lt;td align="right" sdval="10.3" sdnum="1033;0;0.0"&gt;10.3&lt;/td&gt;
        &lt;td align="right" sdval="299.9275" sdnum="1033;0;0"&gt;300&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;h2&gt;The ideal printer&lt;/h2&gt;
&lt;p&gt;We can observe that the lowest cost per black page is 1.1 cents for an
inkjet printer (HP Officejet Enterprise Color MFP X585dn). Then there
is a bunch of inkjet printers with a cost per black page of 1.3 cents
and 1.6 cents. The cheapest cost per page for a laser printer is 1.8
cents (for the HP LaserJet Pro MFP M521dn).&lt;/p&gt;
&lt;p&gt;When computing the overall cost of a printer for 3000 black and white
pages, the cheapest printer is the "HP Officejet Pro 8610
e-All-in-One" with an overall cost of $178 ($130 initial cost and 1.6
cents/page), then comes the "HP Officejet Pro 6830 e-All-in-One" with
an overall cost of $210 ($120 initial cost and 3.0 cents/page).&lt;/p&gt;
&lt;p&gt;Printers below $100 have a higher overall cost because of their very
high cost per page (6.7 cents per black page and 10.3 cents per color
page). On the other hand, the printer with the lowest cost per page
(1.1 cents) has a high overall cost because of its high initial cost
of $1000.&lt;/p&gt;
&lt;p&gt;In the end, the ideal printer depends on the usage that will be done
(number of pages printed). Besides, one may consider additional
features (print speed, duplex printing, ...) when choosing a printer.&lt;/p&gt;</summary><category term="Printers"></category><category term="Costs"></category></entry><entry><title>Splitting Swift cluster</title><link href="http://www.florentflament.com/blog/splitting-swift-cluster.html" rel="alternate"></link><updated>2014-10-20T23:25:00+02:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-10-20:blog/splitting-swift-cluster.html</id><summary type="html">&lt;p&gt;At &lt;a href="https://www.cloudwatt.com/en/"&gt;Cloudwatt&lt;/a&gt;, we have been operating a near hundred nodes Swift
cluster in a unique datacenter for a few years. The decision to split
the cluster on two datacenters has been taken recently. The goal is to
have at least one replica of each object on each site in order to
avoid data loss in case of the destruction of a full datacenter (fire,
plane crash, ...).&lt;/p&gt;
&lt;h2&gt;Constraints when updating a running cluster&lt;/h2&gt;
&lt;p&gt;Some precautions have to be taken when updating a running cluster with
customers' data. We want to ensure that no data is lost or corrupted
during the operation and that the cluster's performance isn't hurt too
badly. &lt;/p&gt;
&lt;p&gt;In order to ensure that no data is lost, we have to follow some
guidelines including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Never move more that 1 replica of any object at any given step; That
  way we ensure that 2 copies out 3 are left intact in case something
  goes wrong.&lt;/li&gt;
&lt;li&gt;Process by small steps to limit the impact in case of failure.&lt;/li&gt;
&lt;li&gt;Check during each step that there is no unusual data corruptions,
  and that corrupted data are correctly handled and fixed.&lt;/li&gt;
&lt;li&gt;Check after each step that data has been moved (or kept) at the
  correct place.&lt;/li&gt;
&lt;li&gt;If any issue were to happen, rollback to previous step.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To limit the impact on cluster's performance, we have to address to
following issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assess the availability of cluster resources (network bandwidth,
  storage nodes' disks &amp;amp; CPU availability) at different times of day
  and week. This would allow to choose the best time to perform our
  steps.&lt;/li&gt;
&lt;li&gt;Assess the load on the cluster of the steps planned to split the
  cluster.&lt;/li&gt;
&lt;li&gt;Choose steps small enough so that:&lt;ul&gt;
&lt;li&gt;it fits time frames where cluster's resources are more available;&lt;/li&gt;
&lt;li&gt;the load incurred by the cluster (and its users) is acceptable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A number of these requirements have been addressed by Swift for a while:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When updating Swift ring files, the &lt;code&gt;swift-ring-builder&lt;/code&gt; tool
  doesn't move more than 1 replica during reassignment of cluster's
  partitions (unless something really went wrong). By performing only
  one reassignment per process step, we ensure that we don't move more
  than 1 replica at each step.&lt;/li&gt;
&lt;li&gt;Checking for data corruption is made easy by Swift. 3 processes
  (&lt;code&gt;swift-object-auditor&lt;/code&gt;, &lt;code&gt;swift-container-auditor&lt;/code&gt; and
  &lt;code&gt;swift-account-auditor&lt;/code&gt;) running on storage nodes are continuously
  checking and fixing data integrity.&lt;/li&gt;
&lt;li&gt;Checking that data is at the correct location is also made easy by
  the &lt;code&gt;swift-dispersion-report&lt;/code&gt; provided.&lt;/li&gt;
&lt;li&gt;Updating the location of data is made seamless by updating and
  copying the Ring files to every Swift nodes. Once updated, the Ring
  files are loaded by Swift processes without the need of being
  restarted. Rollbacking data location is easily performed by
  replacing the new Ring files by previous ones.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, being able to control the amount of data to move to a new
datacenter at a given step is a brand new feature, that has been fixed
in &lt;a href="https://github.com/openstack/swift/releases/tag/2.2.0"&gt;version 2.2.0 of Swift&lt;/a&gt;, released on October 4th of 2014.&lt;/p&gt;
&lt;h2&gt;Checking data integrity&lt;/h2&gt;
&lt;p&gt;Swift &lt;code&gt;auditor&lt;/code&gt; processes (&lt;code&gt;swift-object-auditor&lt;/code&gt;,
&lt;code&gt;swift-container-auditor&lt;/code&gt; and &lt;code&gt;swift-account-auditor&lt;/code&gt;) running on
storage nodes are continuously checking data integrity, by checking
files' checksums. When a corrupted file is found, it is &lt;em&gt;quarantined&lt;/em&gt;;
the data is removed from the node and the &lt;em&gt;replication&lt;/em&gt; mechanism
takes care of replacing the missing data. Below is an example of what
concretely happens when manually corrupting an object.&lt;/p&gt;
&lt;p&gt;Let's corrupt data by hand:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;root@swnode0:/srv/node/d1/objects/154808/c3a# cat 972e359caf9df6fdd3b8e295afd4cc3a/1410353767.57579.data
blabla
root@swnode0:/srv/node/d1/objects/154808/c3a# &lt;span class="nb"&gt;echo &lt;/span&gt;blablb &amp;gt; 972e359caf9df6fdd3b8e295afd4cc3a/1410353767.57579.data
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The corrupted object is 'quarantined' by the object-auditor when it
checks the files integrity. Here's how it appears in the
&lt;code&gt;/var/log/syslog&lt;/code&gt; log file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Sep 10 13:56:44 swnode0 object-auditor: Quarantined object /srv/node/d1/objects/154808/c3a/972e359caf9df6fdd3b8e295afd4cc3a/1410353767.57579.data: ETag 9b36b2e89df94bc458d629499d38cf86 and file&amp;#39;s md5 6235440677e53f66877f0c1fec6a89bd do not match
Sep 10 13:56:44 swnode0 object-auditor: ERROR Object /srv/node/d1/objects/154808/c3a/972e359caf9df6fdd3b8e295afd4cc3a failed audit and was quarantined: ETag 9b36b2e89df94bc458d629499d38cf86 and file&amp;#39;s md5 6235440677e53f66877f0c1fec6a89bd do not match
Sep 10 13:56:44 swnode0 object-auditor: Object audit (ALL) &amp;quot;forever&amp;quot; mode completed: 0.02s. Total quarantined: 1, Total errors: 0, Total files/sec: 46.71, Total bytes/sec: 326.94, Auditing time: 0.02, Rate: 0.98
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The quarantined object is then overwritten by the object-replicator of
a node that has the appropriate replica uncorrupted. Below is an
extract of the log file on such node:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Sep 10 13:57:01 swnode1 object-replicator: Starting object replication pass.
Sep 10 13:57:01 swnode1 object-replicator: &amp;lt;f+++++++++ c3a/972e359caf9df6fdd3b8e295afd4cc3a/1410353767.57579.data
Sep 10 13:57:01 swnode1 object-replicator: Successful rsync of /srv/node/d1/objects/154808/c3a at 192.168.100.10::object/d1/objects/154808 (0.182)
Sep 10 13:57:01 swnode1 object-replicator: 1/1 (100.00%) partitions replicated in 0.21s (4.84/sec, 0s remaining)
Sep 10 13:57:01 swnode1 object-replicator: 1 suffixes checked - 0.00% hashed, 100.00% synced
Sep 10 13:57:01 swnode1 object-replicator: Partition times: max 0.2050s, min 0.2050s, med 0.2050s
Sep 10 13:57:01 swnode1 object-replicator: Object replication complete. (0.00 minutes)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The corrupted data has been replaced by the correct data on the
initial storage node (where the file had been corrupted):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;root@swnode0:/srv/node/d1/objects/154808/c3a# cat 972e359caf9df6fdd3b8e295afd4cc3a/1410353767.57579.data
blabla
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Checking data location&lt;/h2&gt;
&lt;h3&gt;Preparation&lt;/h3&gt;
&lt;p&gt;We can use the &lt;code&gt;swift-dispersion-report&lt;/code&gt; tool provided with Swift to
monitor our data dispersion ratio (ratio of objects on the proper
device / number of objects). A dedicated Openstack account is required
that will be used by &lt;code&gt;swift-dispersion-populate&lt;/code&gt; to create containers
and objects.&lt;/p&gt;
&lt;p&gt;Then we have to configure appropriately the &lt;code&gt;swift-dispersion-report&lt;/code&gt;
tool with the &lt;code&gt;/etc/swift/dispersion.conf&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[dispersion]
auth_url = http://SWIFT_PROXY_URL/auth/v1.0
auth_user = DEDICATED_ACCOUNT_USERNAME
auth_key = DEDICATED_ACCOUNT_PASSWORD
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once properly set, we can initiate dispersion monitoring by populating
our new account with test data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cloud@swproxy:~&lt;span class="nv"&gt;$ &lt;/span&gt;swift-dispersion-populate
Created &lt;span class="m"&gt;2621&lt;/span&gt; containers &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 4m, &lt;span class="m"&gt;0&lt;/span&gt; retries
Created &lt;span class="m"&gt;2621&lt;/span&gt; objects &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 2m, &lt;span class="m"&gt;0&lt;/span&gt; retries
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Our objects should have been placed on appropriate devices. We can
check this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cloud@swproxy:~&lt;span class="nv"&gt;$ &lt;/span&gt;swift-dispersion-report
Queried &lt;span class="m"&gt;2622&lt;/span&gt; containers &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 2m, &lt;span class="m"&gt;31&lt;/span&gt; retries
100.00% of container copies found &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;7866&lt;/span&gt; of 7866&lt;span class="o"&gt;)&lt;/span&gt;
Sample represents 1.00% of the container partition space
Queried &lt;span class="m"&gt;2621&lt;/span&gt; objects &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 45s, &lt;span class="m"&gt;1&lt;/span&gt; retries
There were &lt;span class="m"&gt;2621&lt;/span&gt; partitions missing &lt;span class="m"&gt;0&lt;/span&gt; copy.
100.00% of object copies found &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;7863&lt;/span&gt; of 7863&lt;span class="o"&gt;)&lt;/span&gt;
Sample represents 1.00% of the object partition space
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Monitoring data redistribution&lt;/h3&gt;
&lt;p&gt;Once updated ring has been pushed to every nodes and proxy servers, we
can follow the data redistribution with the
&lt;code&gt;swift-dispersion-report&lt;/code&gt;. The migration is terminated when the number
of objects copies reach 100%. Here's an example of results obtained on
a 6 nodes cluster.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cloud@swproxy:~&lt;span class="nv"&gt;$ &lt;/span&gt;swift-dispersion-report
Queried &lt;span class="m"&gt;2622&lt;/span&gt; containers &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 3m, &lt;span class="m"&gt;29&lt;/span&gt; retries
100.00% of container copies found &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;7866&lt;/span&gt; of 7866&lt;span class="o"&gt;)&lt;/span&gt;
Sample represents 1.00% of the container partition space
Queried &lt;span class="m"&gt;2621&lt;/span&gt; objects &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 33s, &lt;span class="m"&gt;0&lt;/span&gt; retries
There were &lt;span class="m"&gt;23&lt;/span&gt; partitions missing &lt;span class="m"&gt;0&lt;/span&gt; copy.
There were &lt;span class="m"&gt;2598&lt;/span&gt; partitions missing &lt;span class="m"&gt;1&lt;/span&gt; copy.
66.96% of object copies found &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5265&lt;/span&gt; of 7863&lt;span class="o"&gt;)&lt;/span&gt;
Sample represents 1.00% of the object partition space

&lt;span class="c"&gt;# Then some minutes later&lt;/span&gt;
cloud@swproxy:~&lt;span class="nv"&gt;$ &lt;/span&gt;swift-dispersion-report
Queried &lt;span class="m"&gt;2622&lt;/span&gt; containers &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 5m, &lt;span class="m"&gt;0&lt;/span&gt; retries
100.00% of container copies found &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;7866&lt;/span&gt; of 7866&lt;span class="o"&gt;)&lt;/span&gt;
Sample represents 1.00% of the container partition space
Queried &lt;span class="m"&gt;2621&lt;/span&gt; objects &lt;span class="k"&gt;for&lt;/span&gt; dispersion reporting, 26s, &lt;span class="m"&gt;0&lt;/span&gt; retries
There were &lt;span class="m"&gt;91&lt;/span&gt; partitions missing &lt;span class="m"&gt;0&lt;/span&gt; copy.
There were &lt;span class="m"&gt;2530&lt;/span&gt; partitions missing &lt;span class="m"&gt;1&lt;/span&gt; copy.
67.82% of object copies found &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5333&lt;/span&gt; of 7863&lt;span class="o"&gt;)&lt;/span&gt;
Sample represents 1.00% of the object partition space
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Limiting the amount of data to move&lt;/h2&gt;
&lt;p&gt;There has been a number of recent contributions to Swift that have
been done in order to allow the smooth addition of nodes to a new
region.&lt;/p&gt;
&lt;p&gt;With versions of &lt;code&gt;swift-ring-builder&lt;/code&gt; earlier than Swift 2.1, when
adding a node to a new region, 1 replica of every object was moved to
the new region in order to maximize the dispersion of objects across
different regions. Such algorithm had severe drawbacks. Let's consider
a one region Swift cluster with 100 storage nodes. Adding 1 node to a
second region had the effect of transferring 1/3 of the cluster's data
to the new node, which would not have the capacity to store the data
previously distributed over 33 nodes. So in order to add a new region
to our cluster, we had to add in 1 step enough nodes to store 1/3 of
our data. Let's consider we add 33 nodes to the new region. While
there is enough capacity on these nodes to receive 1 replica of every
objects, such operation would trigger the transfer of Petabytes of
data to the new nodes. With a 10 Gigabits/second link between the 2
datacenters, such transfer would take days if not weeks, during which
the cluster's network and destination nodes' disks would be saturated.&lt;/p&gt;
&lt;p&gt;With &lt;a href="https://review.openstack.org/#/c/115441/"&gt;commit 6d77c37&lt;/a&gt; ("Let admins add a region without melting
their cluster"), that has been released with Swift 2.1, the number of
partitions assigned to nodes in a new region was determined by the
weights of the nodes' devices. This feature allowed a Swift cluster
operator the limit the amount of data transferred to a new
region. However, because of &lt;a href="https://bugs.launchpad.net/swift/+bug/1367826"&gt;bug 1367826&lt;/a&gt; ("swift-ringbuilder
rebalance moves 100% partitions when adding a new node to a new
region"), even when limiting the amount of data transferred to a new
region, a big amount of data is moved uselessly inside the initial
region. For instance, it could happen that after a &lt;code&gt;swift-ring-builder
rebalance&lt;/code&gt; operation, 3% of partitions were assigned to the new
region, but 88% of partitions were reassigned to new nodes inside the
first region. The would lead to uselessly loading the cluster's
network and storage nodes.&lt;/p&gt;
&lt;p&gt;Eventually, &lt;a href="https://review.openstack.org/#/c/121422/"&gt;commit 20e9ad5&lt;/a&gt; ("Limit partition movement when adding
a new tier") fixed &lt;a href="https://bugs.launchpad.net/swift/+bug/1367826"&gt;bug 1367826&lt;/a&gt;. This commit has been released
with Swift 2.2. It allows an operator to choose the amount of data
that flows between regions, when adding nodes to a new region, without
border effects. This feature enables the operator to perform a multi
steps cluster split, by first adding devices with very low weights to
a new region, then by progressively increasing the weights step by
step. This can be done until 1 replica of every objects has been
transferred to the new region. Since the number of partitions assigned
to the new region depends on the weights assigned to the new devices,
the operator has to compute the appropriate weights.&lt;/p&gt;
&lt;h3&gt;Computing new region weight for a given ratio of partitions&lt;/h3&gt;
&lt;p&gt;In order to assign a given ratio of partitions to a new region, a
Swift operator can compute the devices' weights by using the following
formula.&lt;/p&gt;
&lt;p&gt;Given:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;w1 is the weight of a single device in region r1&lt;/li&gt;
&lt;li&gt;r1 has n1 devices&lt;/li&gt;
&lt;li&gt;W1 = n1 * w1 is the full weight of region r1&lt;/li&gt;
&lt;li&gt;r2 has n2 devices&lt;/li&gt;
&lt;li&gt;w2 is the weight of a single device in region r2&lt;/li&gt;
&lt;li&gt;W2 = n2 * w2 is the full weight of region r2&lt;/li&gt;
&lt;li&gt;r is the ratio of partitions we want in region r2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;r = W2 / (W1+W2)&lt;/li&gt;
&lt;li&gt;&amp;lt;=&amp;gt; W2 = r*W1 / (1-r)&lt;/li&gt;
&lt;li&gt;&amp;lt;=&amp;gt; w2 = r&lt;em&gt;W1 / (1-r)&lt;/em&gt;n2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;w2 is the weight to set to each device of region r2&lt;/p&gt;
&lt;h3&gt;Computing new devices weight for a given number of partitions&lt;/h3&gt;
&lt;p&gt;In some cases the operator may prefer to specify the number of
partitions (rather than its ratio) that he wishes to assign to the
devices of a new region.&lt;/p&gt;
&lt;p&gt;Given:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p1 the number of partitions in region r1&lt;/li&gt;
&lt;li&gt;W1 the full weight of region r1&lt;/li&gt;
&lt;li&gt;p2 the number of partitions in region r2&lt;/li&gt;
&lt;li&gt;W2 the full weight of region r2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have the following equality:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p1/W1 = p2/W2&lt;/li&gt;
&lt;li&gt;&amp;lt;=&amp;gt; W2 = W1*p2 / p1&lt;/li&gt;
&lt;li&gt;&amp;lt;=&amp;gt; w2 = W1&lt;em&gt;p2 / n2&lt;/em&gt;p1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;w2 is the weight to set to each device of region r2&lt;/p&gt;
&lt;h3&gt;Some scripts to compute weights automatically&lt;/h3&gt;
&lt;p&gt;I made some &lt;a href="https://github.com/FlorentFlament/swift-scripts"&gt;Swift scripts&lt;/a&gt; available to facilitate adding nodes to
a new region. &lt;code&gt;swift-add-nodes.py&lt;/code&gt; allows adding nodes to a new region
with a minimal weight so that only 1 partition will be assigned to
each device (The number and names of devices is set in a constant at
the beginning of the script and has to be updated). Then
&lt;code&gt;swift-assign-partitions.py&lt;/code&gt; allows assigning a chosen ratio of
partitions to the new region.&lt;/p&gt;
&lt;h2&gt;Example of deployment&lt;/h2&gt;
&lt;p&gt;Here's an example of the steps that a Swift operator can follow in
order to split its one region cluster into 2 regions smoothly. A first
step may consist in adding some new nodes to the new region and
assigning 1 partition to each device. This would typically move
between hundreds of Megabytes to a few Gigabytes; thus allowing to
check that everything (network, hardware, ...) is working as
expected. We can use the &lt;code&gt;swift-add-nodes.py&lt;/code&gt; script to easily add
nodes to our new region with a minimal weight so that only 1 partition
will be assigned to each device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python swift-add-nodes.py object.builder object.builder.s1 &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;6000&lt;/span&gt; 127.0.0.1 127.0.0.2 127.0.0.3
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdb1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdc1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdd1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sde1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.2&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdb1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.2&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdc1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.2&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdd1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.2&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sde1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.3&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdb1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.3&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdc1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.3&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sdd1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;
Adding device: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: 5.11, &lt;span class="s1"&gt;&amp;#39;zone&amp;#39;&lt;/span&gt;: 0, &lt;span class="s1"&gt;&amp;#39;ip&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;127.0.0.3&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;: 2, &lt;span class="s1"&gt;&amp;#39;device&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;sde1&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;: 6000&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$ &lt;/span&gt;swift-ring-builder object.builder.s1 rebalance
Reassigned &lt;span class="m"&gt;12&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00%&lt;span class="o"&gt;)&lt;/span&gt; partitions. Balance is now 0.18.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Subsequent steps may consist in increasing the partitions count by
steps of some percentage (let's say 3%) until one third of total
cluster data is stored in the new region. Script
&lt;code&gt;swift-assign-partitions.py&lt;/code&gt; allows assigning a chosen ratio of
partitions to the new region:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python swift-assign-partitions.py object.builder.s2 object.builder.s3 &lt;span class="m"&gt;2&lt;/span&gt; 0.03
Setting new weight of 10376.28 to device 1342
Setting new weight of 10376.28 to device 1343
Setting new weight of 10376.28 to device 1344
Setting new weight of 10376.28 to device 1345
Setting new weight of 10376.28 to device 1346
Setting new weight of 10376.28 to device 1347
Setting new weight of 10376.28 to device 1348
Setting new weight of 10376.28 to device 1349
Setting new weight of 10376.28 to device 1350
Setting new weight of 10376.28 to device 1351
Setting new weight of 10376.28 to device 1352
Setting new weight of 10376.28 to device 1353

&lt;span class="nv"&gt;$ &lt;/span&gt;swift-ring-builder object.builder.s3 rebalance
Reassigned &lt;span class="m"&gt;25119&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;9.58%&lt;span class="o"&gt;)&lt;/span&gt; partitions. Balance is now 0.25.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Thanks &amp;amp; related links&lt;/h2&gt;
&lt;p&gt;Special thanks to Christian Schwede for the awesome work he did to
improve the &lt;code&gt;swift-ring-builder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Interested in more details about &lt;a href="http://www.florentflament.com/blog/openstack-swift-ring-made-understandable.html"&gt;how Openstack Swift Ring is
working&lt;/a&gt; ?&lt;/p&gt;
&lt;p&gt;Want to know more about all of this ? Come to see our talk &lt;a href="https://openstacksummitnovember2014paris.sched.org/event/15afea20487919ec1e55c7f385df3f68#.VEVpSoXzTFY"&gt;Using
OpenStack Swift for Extreme Data Durability&lt;/a&gt; at the next OpenStack
Summit in Paris !&lt;/p&gt;</summary><category term="OpenStack"></category><category term="Swift"></category><category term="operations"></category></entry><entry><title>OpenStack Swift Ring made understandable</title><link href="http://www.florentflament.com/blog/openstack-swift-ring-made-understandable.html" rel="alternate"></link><updated>2014-10-11T22:00:00+02:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-10-11:blog/openstack-swift-ring-made-understandable.html</id><summary type="html">&lt;p&gt;When people talk about OpenStack Swift, we often hear the word
Ring. This is because the Ring is a central piece in how Swift is
working. But what &lt;em&gt;is&lt;/em&gt; this thing everyone's talking about ?&lt;/p&gt;
&lt;p&gt;The Ring refers to 3 files that are shared among every Swift nodes
(storage and proxy nodes):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;object.ring.gz&lt;/li&gt;
&lt;li&gt;container.ring.gz&lt;/li&gt;
&lt;li&gt;account.ring.gz&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is actually one ring per type of data manipulated by Swift:
Objects, Containers and Accounts. These files determine on which
physical devices (hard disks) will be stored each object (and also
each container and account). The number of devices on which an object
is stored depends on the number of replicas (copies) specified for the
Swift cluster.&lt;/p&gt;
&lt;h2&gt;How does it concretely work&lt;/h2&gt;
&lt;p&gt;When receiving an object to store, Swift computes a (MD5) hash of the
object's full name (including its account's and container's name). A
part of this hash is kept and interpreted by Swift as the partition
number. The length of the hash segment kept depends on the number of
partitions that has been set in the Swift cluster; This number is
necessarily a power of 2. So that if we keep n bits of the hash, we
have 2^n partitions.&lt;/p&gt;
&lt;p&gt;The object ring is a map that associates each partition to a specific
physical device. This mechanism is then repeated for every object's
replicas, and also for containers and accounts.&lt;/p&gt;
&lt;p&gt;To be more specific, the object's ring has 3 components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is referred in the code as the &lt;code&gt;_replica2part2dev&lt;/code&gt; table (which
  name is relatively explicit as we'll see later on)&lt;/li&gt;
&lt;li&gt;The table of devices describing each device&lt;/li&gt;
&lt;li&gt;The length of an object's hash to consider as the partition number&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;_replica2part2dev&lt;/code&gt; structure is a 2-dimensional table, so that
for any (replica number, partition number) couple, the table indicates
the physical device, where the object should be stored.&lt;/p&gt;
&lt;p&gt;The devices table contains every information that a Swift node needs
in order to reach a given device; It consists mostly in the device's
storage node's IP address, the TCP port to use, and the physical
device name on the storage node.&lt;/p&gt;
&lt;p&gt;In the end, the Ring is composed of 2 tables and one integer. If I
were to choose a name for such structure, I would call it the Table. I
couldn't find any explanation of why the name Ring was adopted, but my
guess is that some previous algorithm may have used some modular
computation, which people tend to represent using rings..&lt;/p&gt;
&lt;h2&gt;Example&lt;/h2&gt;
&lt;p&gt;Here is a simple example to make everything clear. Let's consider a
Swift cluster with 2 storage nodes, with the following IPs addresses:
&lt;code&gt;192.168.0.10&lt;/code&gt; and &lt;code&gt;192.168.0.11&lt;/code&gt;. Each storage node has two devices:
&lt;code&gt;sdb1&lt;/code&gt; and &lt;code&gt;sdc1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;An example of &lt;code&gt;_replica2part2dev&lt;/code&gt; table with 3 replicas, 8 partitions
and 4 devices would be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;r
e  |   +-----------------+
p  | 0 | 0 1 2 3 0 1 2 3 |
l  | 1 | 1 2 3 0 1 2 3 0 |
i  | 2 | 2 3 0 1 2 3 0 1 |
c  v   +-----------------+
a        0 1 2 3 4 5 6 7
       ------------------&amp;gt;
           partition
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The table has 3 lines, one for each replica, and 8 columns, one for
each partition. To find the device storing the replica number 1 of
partition number 2, we select the line of index 1 and column of index
2. This lead us to the device ID 3.&lt;/p&gt;
&lt;p&gt;The devices table is very similar to what we can obtain by using the
&lt;code&gt;swift-ring-builder&lt;/code&gt; with only the builder file as argument:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;swift-ring-builder mybuilder 
mybuilder, build version 4
&lt;span class="m"&gt;8&lt;/span&gt; partitions, 3.000000 replicas, &lt;span class="m"&gt;1&lt;/span&gt; regions, &lt;span class="m"&gt;1&lt;/span&gt; zones, &lt;span class="m"&gt;4&lt;/span&gt; devices, 0.00 balance
The minimum number of hours before a partition can be reassigned is 0
Devices:    id  region  zone      ip address  port  replication ip  replication port      name weight partitions balance meta
             &lt;span class="m"&gt;0&lt;/span&gt;       &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;    192.168.0.10  &lt;span class="m"&gt;6000&lt;/span&gt;    192.168.0.10              &lt;span class="m"&gt;6000&lt;/span&gt;      sdb1 100.00          &lt;span class="m"&gt;6&lt;/span&gt;    0.00 
             &lt;span class="m"&gt;1&lt;/span&gt;       &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;    192.168.0.10  &lt;span class="m"&gt;6000&lt;/span&gt;    192.168.0.10              &lt;span class="m"&gt;6000&lt;/span&gt;      sdc1 100.00          &lt;span class="m"&gt;6&lt;/span&gt;    0.00 
             &lt;span class="m"&gt;2&lt;/span&gt;       &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;    192.168.0.11  &lt;span class="m"&gt;6000&lt;/span&gt;    192.168.0.11              &lt;span class="m"&gt;6000&lt;/span&gt;      sdb1 100.00          &lt;span class="m"&gt;6&lt;/span&gt;    0.00 
             &lt;span class="m"&gt;3&lt;/span&gt;       &lt;span class="m"&gt;1&lt;/span&gt;     &lt;span class="m"&gt;1&lt;/span&gt;    192.168.0.11  &lt;span class="m"&gt;6000&lt;/span&gt;    192.168.0.11              &lt;span class="m"&gt;6000&lt;/span&gt;      sdc1 100.00          &lt;span class="m"&gt;6&lt;/span&gt;    0.00
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The device of ID 3 can be found on server 192.168.0.11, port 6000,
device name sdc1.&lt;/p&gt;
&lt;h2&gt;Simple is good&lt;/h2&gt;
&lt;p&gt;What I like with such mechanism is that the smartness of the data
placement is performed by the &lt;code&gt;swift-ring-builder&lt;/code&gt;, a standalone tool
provided with Swift. Once the rings have been built, Swift processes
running on the Swift nodes have a fully deterministic and easily
predictable behavior.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;swift-ring-builder&lt;/code&gt; manipulates &lt;code&gt;builders&lt;/code&gt; files; these are files
containing architectural information about the Swift cluster (like
distribution of devices and nodes among regions and zones). These
&lt;code&gt;builders&lt;/code&gt; are then used to generate the &lt;code&gt;rings&lt;/code&gt; files. As with the
rings, there is one builder per type of data (objects, containers and
accounts).&lt;/p&gt;
&lt;p&gt;Thanks to this mechanism the complexity of smartly storing objects has
been well separated between:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Smartly assigning partitions (and corresponding objects, containers
  and accounts) to devices, taking into account the cluster's
  architecture. This is performed by the &lt;code&gt;swift-ring-builder&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensuring that files are stored uncorrupted at the appropriate
  locations; This is performer by the processes running on the Swift
  nodes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;More&lt;/h2&gt;
&lt;p&gt;For more information about the ring, one can read the &lt;a href="http://docs.openstack.org/developer/swift/overview_ring.html"&gt;Swift's
developer documentation about the Ring&lt;/a&gt;.&lt;/p&gt;</summary><category term="OpenStack"></category><category term="Swift"></category><category term="Ring"></category></entry><entry><title>Right VM cost</title><link href="http://www.florentflament.com/blog/right-vm-cost.html" rel="alternate"></link><updated>2014-08-03T00:00:00+02:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-08-03:blog/right-vm-cost.html</id><summary type="html">&lt;p&gt;With cloud Virtual Machines prices dropping month after month, we may
be asking if the margins previously done by cloud operators were not
outrageously high. I actually find surprising that current VM price is
on average higher than equivalent dedicated server even though
virtualization allows sharing more hardware.&lt;/p&gt;
&lt;h2&gt;Comparing dedicated server versus VM costs&lt;/h2&gt;
&lt;p&gt;Low cost dedicated servers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU 1 Core / 2 threads - RAM 2 GB - HDD 500 GB - costs €5 / month at &lt;a href="http://www.kimsufi.com/en/"&gt;Kimsufi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CPU 1 Core - RAM 2 GB - SHDD 500 GB - costs €9.99 / month at &lt;a href="http://www.online.net/en/dedicated-server"&gt;online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Low cost VMs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU 2 Cores - RAM 2 GB - SSD 40 GB - costs $20 / month at &lt;a href="https://www.digitalocean.com/pricing/"&gt;DigitalOcean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;vCPUs 2 - RAM 2 GB - SSD 60 GB - $54 / month at &lt;a href="http://www.rackspace.com/cloud/public-pricing/"&gt;rackspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;vCPUs 1 (fractional) - RAM 2 GB - 0 (additional storage cost) - $19 / month at &lt;a href="http://aws.amazon.com/ec2/pricing/"&gt;Amazon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Virtual machines CPUs don't have much meaning, since depending on the
underlying hardware a virtual machine CPU may correspond to a physical
CPU core, thread or a fraction of CPU if the hypervisor is sharing
CPUs among VMs. Amazon introduces an EC2 Compute Unit (ECU), that
would allow objectively &lt;a href="http://aws.amazon.com/ec2/faqs/"&gt;comparing CPU performance between VMs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At first glance we can see that for low end configurations the
price/performance ratio of Virtual Machines looks much higher than
ratio of dedicated servers.&lt;/p&gt;
&lt;h2&gt;Estimating cost of hardware&lt;/h2&gt;
&lt;p&gt;We can make an estimate of the cost of hardware by performing a
&lt;a href="http://en.wikipedia.org/wiki/Regression_analysis"&gt;multiple regression analysis&lt;/a&gt; on dedicated server prices.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ovh.com/fr/serveurs_dedies/enterprise/"&gt;OVH prices&lt;/a&gt; (only considering Intel Xeon CPUs):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;|-------------------------------------------------------------------------------------------|
|         CPU type        | # threads | RAM (GB) | HDD (TB) | SSD (GB) | Price (€/month HT) |
|-------------------------------------------------------------------------------------------|
|                                 OVH Enterprise                                            |
|-------------------------------------------------------------------------------------------|
| Intel Xeon E5-1620v2    |     8     |    64    |     4    |     0    |       €81.99       |
| Intel Xeon E5-1650v2    |    12     |   128    |     4    |     0    |      €131.99       |
| Intel Xeon 2x E5-2650v2 |    32     |   128    |     4    |     0    |      €202.99       |
| Intel Xeon 2x E5-2670v2 |    40     |   256    |     4    |     0    |      €302.99       |
|-------------------------------------------------------------------------------------------|
|                                   OVH Infra                                               |
|-------------------------------------------------------------------------------------------|
| Intel Xeon E5-1620v2    |     8     |    32    |     6    |     0    |       €81.99       |
| Intel Xeon E5-1650v2    |    12     |    64    |     6    |     0    |      €141.99       |
| Intel Xeon 1x E5-2650v2 |    16     |   128    |     6    |     0    |      €191.99       |
| Intel Xeon 2x E5-2650v2 |    32     |   128    |     6    |     0    |      €302.99       |
| Intel Xeon 2x E5-2670v2 |    40     |   256    |     6    |     0    |      €402.99       |
|-------------------------------------------------------------------------------------------|
|                                   OVH Storage                                             |
|-------------------------------------------------------------------------------------------|
| Intel Xeon 1x E5 2620v2 |    12     |    48    |    48    |     0    |      €372.99       |
| Intel Xeon 1x E5 2620v2 |    12     |    48    |    72    |     0    |      €522.00       |
| Intel Xeon 2x E5 2620v2 |    24     |    64    |   144    |     0    |      €822.00       |
| Intel Xeon 2x E5 2620v2 |    24     |    64    |   216    |     0    |     €1272.00       |
| Intel Xeon 1x E5 2620v2 |    12     |    48    |    36    |   360    |      €372.99       |
| Intel Xeon 1x E5 2620v2 |    12     |    48    |    54    |   360    |      €522.00       |
| Intel Xeon 2x E5 2620v2 |    24     |    64    |   108    |  1080    |      €822.00       |
| Intel Xeon 2x E5 2620v2 |    24     |    64    |   162    |  1080    |     €1272.00       |
|-------------------------------------------------------------------------------------------|
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In our case, for each server setting we have:
Yi = ß1 + ß2&lt;em&gt;Xi2 + ß3&lt;/em&gt;Xi3 + ß4&lt;em&gt;Xi4 + ß5&lt;/em&gt;Xi5 + Ei
where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yi is the price for setting i&lt;/li&gt;
&lt;li&gt;ß1 is a constant per server&lt;/li&gt;
&lt;li&gt;ß2 is the estimate of € / thread&lt;/li&gt;
&lt;li&gt;ß3 is the estimate of € / GB of RAM&lt;/li&gt;
&lt;li&gt;ß4 is the estimate of € / TB of HDD&lt;/li&gt;
&lt;li&gt;ß5 is the estimate of € / GB of SSD&lt;/li&gt;
&lt;li&gt;Xi2 is the number of CPU threads for setting i&lt;/li&gt;
&lt;li&gt;Xi3 is the amount of RAM in GB for setting i&lt;/li&gt;
&lt;li&gt;Xi4 is the amount of HDD space in TB for setting i&lt;/li&gt;
&lt;li&gt;Xi5 is the amount of SSD space in GB for setting i&lt;/li&gt;
&lt;li&gt;Ri is the residual error for setting i&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can estimate ßj coefficients with the following formula:
ß = (Xt&lt;em&gt;X)-¹&lt;/em&gt;Xt*Y&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python pricing_vm_simple.py
Constant: 31.3530724158
Eur / CPU thread: 3.12689639938
Eur / GB of RAM: 0.639580183605
Eur / TB of HDD: 5.18992626031
Eur / GB of SSD: 0.197627042107
R^2: 0.982339781679
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assuming that we rent some of the afore mentioned dedicated servers,
what comes out from these results is that the most expensive resource
is the Intel Xeon CPU thread, which costs more than €3/month. Hence
the monthly cost of the following configurations (including €1 share
of server fixed cost):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 Full Xeon Threads - 2 GB RAM - 40 GB SSD : €16.50&lt;/li&gt;
&lt;li&gt;1 Full Xeon Thread - 1 GB RAM - 10 GB SSD : €6.75&lt;/li&gt;
&lt;li&gt;1/4th Xeon Thread - 1 GB RAM - 5 GB SSD : €3.40&lt;/li&gt;
&lt;li&gt;1/8th Xeon Thread - 512 MB RAM - 1 GB SSD : €1.90&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Interpretation&lt;/h2&gt;
&lt;p&gt;These hardware costs look rather aligned with cheapest (Digital Ocean)
VMs prices. On the other hand, public cloud leaders (Rackspace and
Amazon) are much more expensive.&lt;/p&gt;
&lt;p&gt;So should Virtual Machines be cheaper than equivalent dedicated
servers ? Well, this is possible when virtualization allows sharing a
certain amount of fixed costs among users of the same hardware.
According to the previous regression analysis (and hardware
considered), these fixed costs account for roughly €30 / month per
server. Therefore, for low end VMs from some Euros to tens of Euros,
fixed costs sharing looks meaningful. On the other hand, high end VMs
are costly and don't allow many users to share the same server. In
that case, there is no real cost advantage in choosing a VM instead of
a dedicated server in a 24H / 24 7D / 7 usage scenario. However, for
ephemeral usage, high end virtual machines may make sense. Besides,
SSD storage (which is recommended when sharing a disk with many users)
is costly. Therefore, in the case of huge storage space requirements,
dedicated servers with big HDDs may be more appropriate.&lt;/p&gt;
&lt;h2&gt;Annex - Regression Analysis code&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1,  8,  64,   4,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 12, 128,   4,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 32, 128,   4,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 40, 256,   4,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1,  8,  32,   6,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 12,  64,   6,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 16, 128,   6,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 32, 128,   6,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 40, 256,   6,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 12,  48,  48,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 12,  48,  72,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 24,  64, 144,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 24,  64, 216,    0;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 12,  48,  36,  360;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 12,  48,  54,  360;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 24,  64, 108, 1080;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1, 24,  64, 162, 1080&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;  81.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 131.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 202.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 302.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;  81.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 141.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 191.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 302.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 402.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 372.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 522.00;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 822.00;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1272.00;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 372.99;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 522.00;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39; 822.00;&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;1272.00&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Computing model parameters&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;

&lt;span class="c"&gt;# Computing predictions based on models&lt;/span&gt;
&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;

&lt;span class="c"&gt;# Computing R^2&lt;/span&gt;
&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SStot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;SSres&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;Rsq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;SSres&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;SStot&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Constant:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Eur / CPU thread:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Eur / GB of RAM:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Eur / TB of HDD:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Eur / GB of SSD:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;R^2:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Rsq&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Virtualization"></category><category term="VM"></category><category term="Hardware"></category><category term="Costs"></category></entry><entry><title>Git SSH Docker container</title><link href="http://www.florentflament.com/blog/git-ssh-docker-container.html" rel="alternate"></link><updated>2014-06-28T00:00:00+02:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-06-28:blog/git-ssh-docker-container.html</id><summary type="html">&lt;p&gt;My favorite option to backup and version my code and text files is
using git with a remote repository. The implementation I have chosen
for that consists in running an ssh server, with git, in a Docker
container. This has the following advantages over other solutions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100% reproducible;&lt;/li&gt;
&lt;li&gt;Limits access to the container in case the account is compromised;&lt;/li&gt;
&lt;li&gt;Consumes less resources that running a VM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;The proposed Git SSH Dockerfile is based on the &lt;a href="https://docs.docker.com/examples/running_ssh_service/"&gt;Dockerizing an SSH
service&lt;/a&gt; example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FROM ubuntu:14.04

RUN apt-get -y update
RUN apt-get -y install openssh-server
RUN apt-get -y install git

&lt;span class="c"&gt;# Setting openssh&lt;/span&gt;
RUN mkdir /var/run/sshd
RUN sed -i &lt;span class="s2"&gt;&amp;quot;s/#PasswordAuthentication yes/PasswordAuthentication no/&amp;quot;&lt;/span&gt; /etc/ssh/sshd_config

&lt;span class="c"&gt;# Adding git user&lt;/span&gt;
RUN adduser --system git
RUN mkdir -p /home/git/.ssh

&lt;span class="c"&gt;# Clearing and setting authorized ssh keys&lt;/span&gt;
RUN &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &amp;gt; /home/git/.ssh/authorized_keys
RUN &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;First SSH public key&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /home/git/.ssh/authorized_keys
RUN &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Second SSH public key&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /home/git/.ssh/authorized_keys
&lt;span class="c"&gt;# ...&lt;/span&gt;

&lt;span class="c"&gt;# Updating shell to bash&lt;/span&gt;
RUN sed -i s#/home/git:/bin/false#/home/git:/bin/bash# /etc/passwd

EXPOSE 22
CMD &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/usr/sbin/sshd&amp;quot;&lt;/span&gt;, &lt;span class="s2"&gt;&amp;quot;-D&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Running the container&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Building the image&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker.io build -t git-ssh_img .
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Running the image&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo docker.io run -p 1234:22 -d --name git-ssh git-ssh_img
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The previous command maps the container's host port 1234 on the
container's SSH port. Of course, this port can be changed to any
value. One can then ssh to the container with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ssh -p &lt;span class="m"&gt;1234&lt;/span&gt; git@&amp;lt;container_host&amp;gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Git"></category><category term="SSH"></category><category term="Docker"></category></entry><entry><title>Securing Data</title><link href="http://www.florentflament.com/blog/securing-data.html" rel="alternate"></link><updated>2014-05-03T23:34:00+02:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-05-03:blog/securing-data.html</id><summary type="html">&lt;p&gt;As a data geek, I've been wondering how I could protect my data from
the main threats (if possible by using only open source software). For
instance, losing data because of a hardware failure is just something
that shouldn't happen anymore, thanks to all the technology available
today. One could argue that cloud storage services may be the
solution, which may be true to deal with hardware failure; but there
are other threats to be taken into account that are worsen by the use
of the such services (I'm thinking about piracy).&lt;/p&gt;
&lt;p&gt;So what's the need in term of data safety, security and availability?
Well here's how I would summarize my ideal target. I basically wish to
protect my data against most threats, while still being able to access
it according to my usage. I've been thinking about the following
threats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hardware failure (Hard disk failure)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Piracy (Pirate breaking into ones computer / online account)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Human mistakes (mistakenly deleting important data)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Theft (Losing data stored on the stolen hardware, thieves abusing
  of sensitive data).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Data Safety and Security&lt;/h1&gt;
&lt;p&gt;Basically, data protection may be split into two categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Data Safety, consisting in measures against hardware failures and
  human mistakes (also natural disasters if we really want to ensure a
  first grade safety level);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data Security, consisting in protecting data against theft and
  piracy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Data Safety&lt;/h2&gt;
&lt;p&gt;In order to avoid losing data because of hardware failure data should
be duplicated. So that if a hard disk fails, the data still remains on
the second disk. Some technologies like RAID (Hardware or Software),
provide such service by performing real time data duplication on
several disks.&lt;/p&gt;
&lt;p&gt;To deal with natural disasters, like fires or floods, we may duplicate
our data at distant locations. This is becoming easier with new
technologies like &lt;a href="http://ceph.com/"&gt;Ceph&lt;/a&gt; or &lt;a href="http://www.openstack.org/software/openstack-storage/"&gt;OpenStack Swift&lt;/a&gt;, that allow real
time duplication of data on distant storage nodes.&lt;/p&gt;
&lt;p&gt;Another category of threat (maybe the most frequent) is human
mistake. One can easily delete an important file by mistake. The good
old solution to deal with such issues is doing regular backups. While
this is a very good idea, depending on the frequency of the backups,
we may accidentally loose some recent data that didn't have the time
to be saved. There are other means to ensure data can be recovered
even after being deleted, such as versioning by using tools like
&lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt;, or &lt;a href="http://owncloud.org/"&gt;ownCloud&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Data Security&lt;/h2&gt;
&lt;p&gt;Piracy is a quite broad topic. However, by following a few simple
rules, we may avoid most of piracy threats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don't store online data that we don't need to have online. Online
  data have much more chances of being stolen than offline data (or
  data available in a private network); If pirates cannot access the
  data through the network, it is much more complicated to gain access
  to it. This is the main reason why I believe that cloud storage may
  not be the best solution for everything. If by chance a pirate
  guesses one's cloud storage account password, he can then access
  freely any data that has been stored there.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Strongly encrypt private data that may be accessed by pirates or
  thieves. Basically any data may potentially be accessed by pirates or
  thieves, but as written previously, online data is much more
  vulnerable, and should therefore be encrypted in priority.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Theft can happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To deal with the issue of loosing its data because of its laptop
  being stolen, we may use some solutions that were discussed
  previously to ensure data safety. Good old backups are still a
  working solution; real time duplication at different locations is
  another one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To deal with private data exploit (meaning malicious usage of
  private data by thieves), encryption is a good option. By ensuring
  that the thieves cannot decrypt the data, we protect us against such
  scenario.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Cost of Protection&lt;/h2&gt;
&lt;p&gt;All these measures for ensuring a proper data protection do have a
cost. To duplicate our data, we need twice as much hard disks than if
we don't. To encrypt our data and decrypt it on the fly to read it
consumes more CPU than processing plain files. Although storage costs
as well as computing costs have collapsed these last years, we may be
smart by &lt;a href="http://www.florentflament.com/blog/data-management.html"&gt;categorizing our data&lt;/a&gt; (e.g: public versus private data,
text documents versus binary files, small versus large files, ...) and
apply different safety and security measures accordingly.&lt;/p&gt;
&lt;h1&gt;Layered architecture&lt;/h1&gt;
&lt;p&gt;Now we need to find out an overall solution that will meet our
requirements. There is not a single tool I can think of that provides
all of the features mentioned in this article. To build our overall
solutions, we'll need to have several tools work together. The
approach I thought about is to split our need into features provided
by different layers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A versioning layer (git, owncloud, ...) that keeps track of the
  history of our data and allows recovering data that has been
  accidentally deleted or altered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An exposition layer, which is more a functional layer that a
  security one, that make data available according to our
  requirements.  For instance, it makes sense to have emails available
  from the internet through IMAPs, while other data may only be
  available through ssh from a host on the private network.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An encryption layer to deal with private data abuse by
  thieves. Technologies like dm-crypt, LUKS and Truecrypt seem to be
  good candidates.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A (possibly redundant) storage backend: object storage, block
  storage or file system (ceph, RAID, ...). First thoughts lead me to
  think about using Ceph as a backend storage. However, it happens
  that Ceph monitor's play a crucial role and may become a SPOF
  (single point of failure) if not redundant. Also they must be an odd
  number, which means at least 3 nodes are required. A simpler RAID
  approach with regular backups seems to be a good compromise for
  small infrastructures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And regular backups. This is cheap, easy to implement, and deals
  with most of our issues. However, the efficiency of backups directly
  depends on their frequency, since work done between successive
  backups will be lost in case of hardware failure, human mistake or
  theft.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example table&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;+------------------+-------------+--------+-------------+-------------+------------------+
|                  |             |        |             |             |                  |
| Files            | text / code | Emails | Binary data | Binary data |      Threat      |
|                  |             |        | important   | throwable   |                  |
+------------------+-------------+--------+-------------+-------------+------------------+
|                  |             |                                    |                  |
| Version layer    |     git     |                 None               | Human            |
|                  |             |                                    | error ++         |
+------------------+-------------+--------+---------------------------+------------------+
|                  |             |        |                           |                  |
| Exposition layer |     ssh     | IMAPs  |            NFS            |                  |
|                  |             |        |                           |                  |
+------------------+------------------- Block devices ----------------+------------------+
|                  |                      |                           |                  |
| Encryption layer |         LUKS         |           None            | Theft (abuse)    |
|                  |                      |                           |                  |
+------------------+------------------- Block devices ----------------+------------------+
|                  |                                                  |                  |
| Redundancy       |                  Disks / RAID                    | Hardware         |
|                  |                                                  | failure ++       |
+------------------+------------------------------------+-------------+------------------+
|                  |                                    |             | Human error /    |
| Backup           |         Regular snapshots          |    None     | Theft (loss) /   |
|                  |                                    |             | Piracy /         |
|                  |                                    |             | Hardware failure |
+------------------+------------------------------------+-------------+------------------+
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Data Safety"></category><category term="Data Security"></category></entry><entry><title>Windows Images for OpenStack</title><link href="http://www.florentflament.com/blog/windows-images-for-openstack.html" rel="alternate"></link><updated>2014-03-30T19:15:00+02:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-03-30:blog/windows-images-for-openstack.html</id><summary type="html">&lt;p&gt;This note summarizes articles from other places about Microsoft
Windows images for OpenStack creation, along with some first hand
experience. The whole process of creating Windows 2008 and Windows
2012 images fully usable on OpenStack instances is described there.&lt;/p&gt;
&lt;h1&gt;Prerequisite&lt;/h1&gt;
&lt;p&gt;To achieve the creation of a qcow2 Windows image for OpenStack, we
need the following ISO images:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An ISO image of the installation DVD for all OSes that we wish to
  use in OpenStack. These ISOs can usually be downloaded from a
  company's account on Microsoft website, once the appropriate
  contract has been signed. For testing purpose, &lt;a href="http://technet.microsoft.com/en-us/evalcenter/hh670538.aspx"&gt;Windows Server 2012
  Evaluation ISO&lt;/a&gt; can be downloaded on Microsoft website.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The latest &lt;a href="http://www.linux-kvm.org/page/WindowsGuestDrivers/Download_Drivers"&gt;VirtIO drivers for Windows&lt;/a&gt;. These are optimized
  drivers to run Windows OSes with KVM virtualized hard disk
  controller and network devices.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Base image creation&lt;/h1&gt;
&lt;p&gt;The first step to build a Microsoft Windows image is to install the OS
in a VM as we would have done on a bare metal computer. &lt;a href="http://blog.gridcentric.com/bid/297627/Creating-a-Windows-Image-on-OpenStack"&gt;Gridcentric's
article about Windows image creation&lt;/a&gt; describes this procedure in
details.&lt;/p&gt;
&lt;p&gt;The steps to follow are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create an empty qcow2 image (this will be the disk on which we'll
  install our OS). I typically use a 9 GB image for Windows 2008, and
  a 17 GB for Windows 2012 (although I think it should work with a 11
  or 12 GB image). Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;qemu-img create -f qcow2 Windows-Server-2008-R2.qcow2 9G
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next step is to launch Windows' installation in a (KVM) virtual
  machine. The following command is an example for that:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kvm &lt;span class="se"&gt;\&lt;/span&gt;
    -m &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -cdrom &amp;lt;WINDOWS_INSTALLER_ISO&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Windows-Server-2008-R2.qcow2,if&lt;span class="o"&gt;=&lt;/span&gt;virtio &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;VIRTIO_DRIVERS_ISO&amp;gt;,index&lt;span class="o"&gt;=&lt;/span&gt;3,media&lt;span class="o"&gt;=&lt;/span&gt;cdrom &lt;span class="se"&gt;\&lt;/span&gt;
    -net nic,model&lt;span class="o"&gt;=&lt;/span&gt;virtio &lt;span class="se"&gt;\&lt;/span&gt;
    -net user &lt;span class="se"&gt;\&lt;/span&gt;
    -nographic &lt;span class="se"&gt;\&lt;/span&gt;
    -vnc :9 &lt;span class="se"&gt;\&lt;/span&gt;
    -k fr &lt;span class="se"&gt;\&lt;/span&gt;
    -usbdevice tablet
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following step consists in connecting to the display of the VM
  launched previously through VNC, in order to manually pursue the
  installation. This can be done with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xvncviewer &amp;lt;IP_OF_HYPERVISOR&amp;gt;:9
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;During the installation, Windows will ask for the Hard Disk
  controller driver. We have to select the VirtIO driver, which is
  located on the VirtIO CDROM (WIN7 directory for Windows 2008,
  and WIN8 directory for Windows 2012).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the basic Windows installation is done, we have to set the
  appropriate Network device driver in the Windows Devices
  Manager. The Network device VirtIO driver is available in the same
  directory than the Hard Disk controller driver specified in the
  previous step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Since VMs will be managed by RDP, we have to activate the
  service. This is done by navigating through the following menu:
  Computer (right-lick) -&amp;gt; Properties -&amp;gt; remote tab, and selecting the
  following option: allow connections from computers running any
  version of Remote Desktop.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An additional step consisting in opening the appropriate Firewall
  ports is required on Windows 2012: Network (right-click) -&amp;gt;
  Properties -&amp;gt; Windows Firewall -&amp;gt; Advanced Settings -&amp;gt; Inbound
  rules. Then enable: Remote Desktop - Shadow, Remote Desktop - User
  Mode TCP, Remote Desktop - User Mode UDP.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Customizing image for OpenStack&lt;/h1&gt;
&lt;p&gt;The previous steps allowed us to have Windows fully installed in a KVM
virtual machine. The last steps consist in installing &lt;a href="http://www.cloudbase.it/cloud-init-for-windows-instances/"&gt;Cloud-Init for
Windows&lt;/a&gt;, a Windows implementation of the Linux based
&lt;a href="http://cloudinit.readthedocs.org/en/latest/"&gt;Cloud-Init&lt;/a&gt; mechanism. This set of scripts transforms a legacy OS
image into a ready for OpenStack image. At instantiation of a VM,
Cloud-Init fetches from a meta-data server, data such as ssh public
key and hostname that allows the instance to become unique. Cloud-Init
base is Open source, and Cloudbase provides an &lt;a href="https://www.cloudbase.it/downloads/CloudbaseInitSetup_Beta.msi"&gt;installer&lt;/a&gt; on its
blog. We'll install Cloud-Init by injecting the installer that we just
downloaded. To to that, we have to follow these steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Shutdown Windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mount the qcow2 image on the hypervisor filesystem, then copy the
  installer on Windows' administrator desktop, with something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo qemu-nbd -c /dev/nbd2 Windows-Server-2008-R2.qcow2
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo mount /dev/nbd2p2 mnt/
&lt;span class="nv"&gt;$ &lt;/span&gt;cp &amp;lt;INSTALLER&amp;gt; &amp;lt;ADMINISTRATOR_DESKTOP_ON_WINDOWS&amp;gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo umount mnt/
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo qemu-nbd -d /dev/nbd2
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Windows in KVM with the same command that we used to install
  Windows in the first place:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;kvm &lt;span class="se"&gt;\&lt;/span&gt;
    -m &lt;span class="m"&gt;2048&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -cdrom &amp;lt;WINDOWS_INSTALLER_ISO&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Windows-Server-2008-R2.qcow2,if&lt;span class="o"&gt;=&lt;/span&gt;virtio &lt;span class="se"&gt;\&lt;/span&gt;
    -drive &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;VIRTIO_DRIVERS_ISO&amp;gt;,index&lt;span class="o"&gt;=&lt;/span&gt;3,media&lt;span class="o"&gt;=&lt;/span&gt;cdrom &lt;span class="se"&gt;\&lt;/span&gt;
    -net nic,model&lt;span class="o"&gt;=&lt;/span&gt;virtio &lt;span class="se"&gt;\&lt;/span&gt;
    -net user &lt;span class="se"&gt;\&lt;/span&gt;
    -nographic &lt;span class="se"&gt;\&lt;/span&gt;
    -vnc :9 &lt;span class="se"&gt;\&lt;/span&gt;
    -k fr &lt;span class="se"&gt;\&lt;/span&gt;
    -usbdevice tablet
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then connect again with xvncviewer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;xvncviewer &amp;lt;IP_OF_HYPERVISOR&amp;gt;:9
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This time, we have to launch the CloudbaseInitSetup_Beta.msi
  installer, and follow the instructions as described on &lt;a href="http://www.cloudbase.it/cloud-init-for-windows-instances/"&gt;Cloudbase
  blog&lt;/a&gt;. At the end of the installation, we have to check the "run
  sysprep" option, but not the "shutdown" one. Sysprep is the tool
  provided by Microsoft to make a VM unique (generates a unique OS ID
  to be used for some Microsoft services), once it's instantiated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the installation is done, we can clean any temporary files
  created, then shutdown the system. The image is ready to be uploaded
  in OpenStack Glance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;glance add &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;OPENSTACK_IMAGE_NAME&amp;gt; &lt;span class="nv"&gt;is_public&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nv"&gt;container_format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bare &lt;span class="nv"&gt;disk_format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;qcow2 &amp;lt; &amp;lt;IMAGE_FILENAME&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Connecting to a Windows VM&lt;/h1&gt;
&lt;p&gt;The usual mechanism used in OpenStack to connect to VMs (running
Linux) is ssh. A public key specified by the user launching the VM is
set in the default user's &lt;code&gt;authorized_keys&lt;/code&gt; file. This allows the user
to connect to the VM by using the corresponding private key.&lt;/p&gt;
&lt;p&gt;However, it is not currently possible to connect to a Windows VM with
ssh (there is some &lt;a href="http://www.cloudbase.it/windows-without-passwords-in-openstack/"&gt;work done in this direction&lt;/a&gt; that I've not
tested yet). Cloud-Init base creates an &lt;code&gt;Admin&lt;/code&gt; user, with either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;a password specified by the user on the command line. Note that the
  password must respect Windows password strength constraints (upper
  and lower case characters, as well as numbers). If not it will be
  silently ignored. For instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nova boot --key-name &amp;lt;KEYPAIR_NAME&amp;gt; --image &amp;lt;IMAGE_ID&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    --flavor &amp;lt;FLAVOR_ID&amp;gt; --nic net-id&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;NET_ID&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
    --meta &lt;span class="nv"&gt;admin_pass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;ADMIN_PASSWORD&amp;gt; &amp;lt;VM_NAME&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a password automatically generated during VM instantiation, and
  encrypted with the ssh public key provided when launching the
  VM. Such password can be retrieved and decrypted with the
  corresponding private ssh key, by using the following command (note
  that the private key is used locally):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;nova get-password &amp;lt;VM_NAME_OR_ID&amp;gt; &amp;lt;SSH_PRIVATE_KEY&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that to connect to a Windows VM from Linux, prefer using
&lt;code&gt;xfreerdp&lt;/code&gt; instead of &lt;code&gt;rdesktop&lt;/code&gt;. The pointer is bogus when connecting
to a windows 2012 VM using &lt;code&gt;rdesktop&lt;/code&gt;.&lt;/p&gt;</summary><category term="OpenStack"></category><category term="Microsft"></category><category term="Windows"></category></entry><entry><title>Chef Server on Raspberry Pi</title><link href="http://www.florentflament.com/blog/chef-server-on-raspberry-pi.html" rel="alternate"></link><updated>2014-03-03T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-03-03:blog/chef-server-on-raspberry-pi.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.raspberrypi.org/"&gt;Raspberry Pi&lt;/a&gt; devices are cheap, quiet, and powerful enough to run
a Debian based Linux Operating System called &lt;a href="http://www.raspbian.org/"&gt;Raspbian&lt;/a&gt;. Such
device would be very convenient to manage one's personal
infrastructure, composed of some physical and / or virtual machines,
by running Chef Server.&lt;/p&gt;
&lt;p&gt;While, the official Chef website mostly documents &lt;a href="http://www.getchef.com/chef/install/#tab2"&gt;the installation of
Chef Server on Ubuntu and (Red Hat) Enterprise Linux&lt;/a&gt;, Chef Server
is available through its API and already packaged for Raspbian as
package &lt;code&gt;chef-server-api&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The installation of Chef Server on a Raspberry Pi is therefore quite
forward. The steps to follow, that are described below, are somehow
inspired from these &lt;a href="http://www.cschramm.net/howtos/installing-chef-server-debian/"&gt;instructions to have Chef Server installed on
Debian using binary packages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Installation procedure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Start from a fresh installation of Raspbian on a Raspberry Pi. From
NOOBS menu, install Raspbian (Using NOOBS v1.2.1).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Chef Server binary package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get update
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo apt-get install chef-server-api
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure Chef Server, by answering to the two questions that will
  be asked:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;URL of Chef server: http://CHEF_SERVER_IP:4000&lt;/li&gt;
&lt;li&gt;Chef AMQP user password: RANDOM_PASSWORD (Avoid using special
  characters)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: Some services won't start, like jetty. &lt;code&gt;chef-server&lt;/code&gt; will also
be said to have failed, but Chef Server APIs will be working anyway.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Testing:&lt;div class="highlight"&gt;&lt;pre&gt;root@raspberrypi:~# knife configure -i
WARNING: No knife configuration file found
Where should I put the config file? [/root/.chef/knife.rb] 
Please enter the chef server URL: [http://raspberrypi:4000] http://CHEF_SERVER_IP:4000
Please enter a clientname for the new client: [pi] root
Please enter the existing admin clientname: [chef-webui] 
Please enter the location of the existing admin client&amp;#39;s private key: [/etc/chef/webui.pem] 
Please enter the validation clientname: [chef-validator] 
Please enter the location of the validation key: [/etc/chef/validation.pem] 
Please enter the path to a chef repository (or leave blank): 
Creating initial API user...
Created client[root]
Configuration file written to /root/.chef/knife.rb
root@raspberrypi:~# knife client list
  chef-validator
  chef-webui
  root
root@raspberrypi:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Update of 2014/03/03&lt;/h2&gt;
&lt;p&gt;Note that I hit the bug &lt;a href="https://tickets.opscode.com/browse/CHEF-3170"&gt;Rabbitmq does not appear to get configured
when installing chef-server via deb packages&lt;/a&gt;. I got errors when
launching commands &lt;code&gt;knife client create&lt;/code&gt; or &lt;code&gt;knife client reregister&lt;/code&gt;,
with following message in &lt;code&gt;rabbitmq&lt;/code&gt; log:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;=ERROR REPORT==== 4-Jun-2012::14:56:01 ===
exception on TCP connection &amp;lt;0.583.0&amp;gt; from 127.0.0.1:34143
{channel0_error,starting,
    {amqp_error,access_refused,
        &amp;quot;AMQPLAIN login refused: user &amp;#39;chef&amp;#39; - invalid credentials&amp;quot;,
        &amp;#39;connection.start_ok&amp;#39;}}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Fix consists in executing the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rabbitmqctl add_vhost /chef
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rabbitmqctl add_user chef PASSWORD_PER_CONFIGURATION
&lt;span class="nv"&gt;$ &lt;/span&gt;sudo rabbitmqctl set_permissions -p /chef chef &lt;span class="s2"&gt;&amp;quot;.*&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.*&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.*&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Chef"></category><category term="Raspberry Pi"></category><category term="Raspbian"></category></entry><entry><title>Data management</title><link href="http://www.florentflament.com/blog/data-management.html" rel="alternate"></link><updated>2014-02-27T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-02-27:blog/data-management.html</id><summary type="html">&lt;p&gt;When using several computers (or devices) from different locations,
the question of data management arises. Basically, I wish being able
to access my data from any computer; I wish my data to be protected,
accordingly to its privacy and I wish my data to be backed up
appropriately.&lt;/p&gt;
&lt;p&gt;With the arrival of Cloud technologies, some of the requirements
become easier to satisfy. For instance, when using online storage,
data is automatically backed up. But in the same time, the question of
data management takes all of its meaning, because we surely don't want
any information to become public. Hence comes the need to classify its
data according to its privacy level, and to use appropriate storage
backend according to data privacy levels.&lt;/p&gt;
&lt;h2&gt;Data classification&lt;/h2&gt;
&lt;p&gt;I chose four levels of classification, because it makes sense to me
and map well with storage backend that will be described later. I'll
also borrow some terminology from security guys:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;White data (i.e. public data): this is a blog post, Open Source
  code, or any information that we want to make available to everyone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grey data: this is all the data that I'd gladly share with my
  friends, but do not want my worse enemy to have access to. Fall in
  this category: interesting documents that I found online or public
  information based notes that are not good enough to make a blog
  post.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Black data: private data, that only trusted people should have
  access to. I'd put in this category any personal documents, from
  emails (some being potentially private) and picture of my holidays
  to administrative documents (ID scans, ...).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Red data: data that only I should have access to, typically
  credentials (passwords, keys, ...).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that the content of these categories may depend on each one's
perception of data privacy. For instance, I put pictures of holidays
in the 'Black data', but we can also consider that pictures of
landscapes may go into the 'Gray data' category.&lt;/p&gt;
&lt;h2&gt;Storage backend&lt;/h2&gt;
&lt;p&gt;So where to store our data? Well now that we've classified our data,
we can choose where we will store it according to the category it is
into.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;White data: The easiest. There are many services on internet that
  will host your public data for free, or almost. For instance, Open
  Source code can be stored into public repositories like &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;,
  or &lt;a href="https://bitbucket.org/"&gt;Bitbucket&lt;/a&gt;. Blogs can be published on &lt;a href="https://wordpress.org/"&gt;WordPress&lt;/a&gt;, &lt;a href="http://pages.github.com/"&gt;GitHub
  Pages&lt;/a&gt; or some personal web site. These services provide both
  availability of the data from anywhere, and easy / automatic backup
  (especially when using a versioning tools like git on GitHub).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Grey data: These data would typically be stored online on a
  "personal" account, which access is restricted by a password. We
  assume that the service provider has full access to the clear data,
  and that this data may be compromised by an attacker. With new cloud
  services available, like free online storage provided by
  &lt;a href="http://www.cloudwatt.com/"&gt;Cloudwatt&lt;/a&gt; or &lt;a href="http://www.dropbox.com/"&gt;Dropbox&lt;/a&gt;, it becomes very easy to have files
  stored online and available from multiple locations, backup possibly
  performed automatically (by default the OpenStack object storage
  module, Swift, uses three copies of each file stored in its data
  store) and possibly versioned (Swift provides an option to
  automatically keep several version of each file). A distributed
  network filesystem on &lt;a href="http://ceph.com/"&gt;Ceph&lt;/a&gt;, may be another approach.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Black data: This data should be stored in a way that provides a fair
  level of data protection, since we typically don't want our service
  provider or hackers to have access to it. There are two completely
  opposite solutions for this: keep this private data locally and not
  put it online at all; or store this data online encrypted with
  strong cryptography algorithms (for instance by using
  &lt;a href="http://duplicity.nongnu.org/"&gt;duplicity&lt;/a&gt;). Having its data stored online (encrypted) allows us
  to benefit from automatic backup and ubiquity, but is riskier that
  the local storage solution. When stored online encrypted, a security
  breach in the software used to protect the data would allow
  attackers to recover all of the private data. When stored locally,
  backup has to be done by ourselves and the data may not be as easily
  available from different locations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Red data: Data in this category are typically keys used to decrypt
  Black data, or passwords to access online services. This data should
  be very well protected. The best way to achieve such level of
  protection is to keep this data locally AND encrypted. This way even
  if the data is stolen, it cannot be read. Backup has to be done
  locally.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Data management"></category></entry><entry><title>Customizing OpenStack RBAC policies</title><link href="http://www.florentflament.com/blog/customizing-openstack-rbac-policies.html" rel="alternate"></link><updated>2014-02-09T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-02-09:blog/customizing-openstack-rbac-policies.html</id><summary type="html">&lt;p&gt;OpenStack uses a &lt;a href="http://docs.openstack.org/developer/keystone/configuration.html#keystone-api-protection-with-role-based-access-control-rbac"&gt;role based access control&lt;/a&gt; (RBAC) mechanism to
manage accesses to its resources. With the current architecture,
users' roles granted on each project and domain are stored into
Keystone, and can be updated through &lt;a href="http://api.openstack.org/api-ref-identity.html#identity-v3"&gt;Keystone's API&lt;/a&gt;. However,
policy enforcement (actually allowing or not the access to resources
according to a user's roles) is performed independently in each
service, based on the rules defined in each &lt;code&gt;policy.json&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;In a default OpenStack setup (like Devstack), two roles are created:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;Member&lt;/code&gt; role, which when granted to a user on a project, allows
  him to manage resources (instances, volumes, ...) in this project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;admin&lt;/code&gt; role, which when granted to a user on any project,
  offers to this user a total control over the whole OpenStack
  platform. Although this is the current behavior, it has been &lt;a href="https://bugs.launchpad.net/keystone/+bug/968696"&gt;marked
  as a bug&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, the OpenStack policy engine allows operators to specify fine
grained set of rules to control access to resources of each OpenStack
service (Keystone, Nova, Cinder, ...).&lt;/p&gt;
&lt;h2&gt;Attributes available to build custom policies&lt;/h2&gt;
&lt;p&gt;Four types of attributes can be used to set policy rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User roles, which can be checked by using the following syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;role:&amp;lt;requires_role&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other user related attributes (stored into or obtained through the
  token). The following attributes are available: user_id, domain_id
  or project_id (depending on the scope), and can be checked against
  constants or other attributes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;project_id:&amp;lt;some_attribute&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;API call attributes are any data sent along with the API call. They
  can be checked against constants or user attributes. For instance,
  the following statement checks that a user being created is in the
  same domain as his creator (note that API call attributes have to be
  on the right side of the expression, while user attributes are on
  the left side):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;domain_id:user.domain_id
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The fourth category of attributes are what I'd call contextual
  attributes. These are the attributes of objects referenced (or
  targeted) by an API call; i.e. any object whose id appear somewhere
  in the API call. For instance, when granting a new role on a project
  to a user, all attributes related to the role, the project and the
  user are available to the policy engine, through the &lt;code&gt;target&lt;/code&gt;
  keyword. The following syntax checks that the role of the context is
  the &lt;code&gt;Member&lt;/code&gt; role:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;#39;Member&amp;#39;:target.role.name
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depending on the type of API calls, some of the following attributes
will be available, according to the objects impacted by the action:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;domain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;target.domain.enabled&lt;/li&gt;
&lt;li&gt;target.domain.id&lt;/li&gt;
&lt;li&gt;target.domain.name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;group:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;target.group.description&lt;/li&gt;
&lt;li&gt;target.group.domain_id&lt;/li&gt;
&lt;li&gt;target.group.id&lt;/li&gt;
&lt;li&gt;target.group.name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;target.project.description&lt;/li&gt;
&lt;li&gt;target.project.domain_id&lt;/li&gt;
&lt;li&gt;target.project.enabled&lt;/li&gt;
&lt;li&gt;target.project.id&lt;/li&gt;
&lt;li&gt;target.project.name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;role:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;target.role.id&lt;/li&gt;
&lt;li&gt;target.role.name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;user:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;target.user.default_project_id&lt;/li&gt;
&lt;li&gt;target.user.description&lt;/li&gt;
&lt;li&gt;target.user.domain_id&lt;/li&gt;
&lt;li&gt;target.user.enabled&lt;/li&gt;
&lt;li&gt;target.user.id&lt;/li&gt;
&lt;li&gt;target.user.name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Example: admin and super_admin&lt;/h2&gt;
&lt;p&gt;The following example is taken from a User Story that we were
considering at &lt;a href="http://www.cloudwatt.com"&gt;CloudWatt&lt;/a&gt;. As a cloud service provider, we wanted
to be able to have 2 different levels of administrator roles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;code&gt;admin&lt;/code&gt; role, which allows its users to grant the &lt;code&gt;Member&lt;/code&gt; role
  to any other user.&lt;/li&gt;
&lt;li&gt;While the &lt;code&gt;super_admin&lt;/code&gt; role allows granting any role.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When added to Keystone's ̀&lt;code&gt;policy.json&lt;/code&gt; file, the following rules
implements the two roles described previously:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;quot;admin_grant_member&amp;quot;: &amp;quot;role:admin and &amp;#39;Member&amp;#39;:%(target.role.name)s&amp;quot;,
&amp;quot;identity:create_grant&amp;quot;: &amp;quot;role:super_admin or rule:admin_grant_member&amp;quot;,
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first rule describes a new rule called &lt;code&gt;admin_grant_member&lt;/code&gt;, which
checks that the user authenticated by the token has the &lt;code&gt;admin&lt;/code&gt; role
(on its scope), and that the role in the context (the role the admin
is trying to grant) is the &lt;code&gt;Member&lt;/code&gt; role (we used the &lt;code&gt;name&lt;/code&gt;
attribute, but could use the role's id instead).&lt;/p&gt;
&lt;p&gt;The second rule is checked whenever an API call is made to grant a
role to a user (action &lt;code&gt;identity:create_grant&lt;/code&gt;). This rule tells the
policy engine that in order for a user to be allowed to grant a role
to another user, the user authenticated by the token must either have
the &lt;code&gt;super_admin&lt;/code&gt; role, or satisfy the &lt;code&gt;admin_grant_member&lt;/code&gt; rule.&lt;/p&gt;
&lt;p&gt;Put together these two rules actually meet the use case. Any user with
the &lt;code&gt;admin&lt;/code&gt; role will only be able to grant the &lt;code&gt;Member&lt;/code&gt; role to other
users, while users with the &lt;code&gt;super_admin&lt;/code&gt; role will be able to grant
any role.&lt;/p&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;One of the most powerful rules that the OpenStack policy engine
allows, are those limiting a user's actions to his own domain or
project. These kind of rules are widely used in &lt;a href="https://github.com/openstack/keystone/blob/master/etc/policy.v3cloudsample.json"&gt;Keystone's
policy.v3cloudsample.json&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also note, that a recent patch merged into oslo-incubator implements
the blueprint allowing the policy engine to &lt;a href="https://blueprints.launchpad.net/oslo/+spec/policy-constant-check"&gt;check contextual
attributes against constant values&lt;/a&gt;. This patch will have to be
synchronized into the OpenStack projects for them to benefit from this
feature.&lt;/p&gt;</summary><category term="OpenStack"></category><category term="Keystone"></category><category term="Policies"></category></entry><entry><title>Setting Keystone v3 domains</title><link href="http://www.florentflament.com/blog/setting-keystone-v3-domains.html" rel="alternate"></link><updated>2014-01-18T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-01-18:blog/setting-keystone-v3-domains.html</id><summary type="html">&lt;p&gt;The &lt;a href="http://api.openstack.org/api-ref-identity.html#identity-v3"&gt;Openstack Identity v3 API&lt;/a&gt;, provided by Keystone, offers
features that were lacking in the previous version. Among these
features, it introduces the concept of domains, allowing isolation of
projects and users. For instance, an administrator allowed to create
projects and users in a given domain, may not have any right in
another one. While these features look very exciting, some
configuration needs to be done to have a working identity v3 service
with domains properly set.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.openstack.org/developer/keystone/configuration.html#keystone-api-protection-with-role-based-access-control-rbac"&gt;Keystone API protection&lt;/a&gt; section of the developer's doc provides
hints about how to set-up a multi-domain installation. Starting from
there, I describe the full steps to have a multi-domain setup running,
by using &lt;code&gt;curl&lt;/code&gt; to send http requests and &lt;code&gt;jq&lt;/code&gt; to parse the json
answers.&lt;/p&gt;
&lt;h2&gt;Setting an admin domain and a cloud admin&lt;/h2&gt;
&lt;p&gt;First, we have to start on a fresh non multi-domain installation with
the &lt;a href="https://github.com/openstack/keystone/blob/master/etc/policy.json"&gt;default policy file&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;With the &lt;code&gt;admin&lt;/code&gt; user we can create the &lt;code&gt;admin_domain&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ADMIN_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/auth/tokens &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -i &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;auth&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;identity&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;methods&amp;quot;: [&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;password&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            ],&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;password&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;user&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                        &amp;quot;name&amp;quot;: &amp;quot;Default&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;                    },&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;name&amp;quot;: &amp;quot;admin&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;password&amp;quot;: &amp;quot;password&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;                }&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        },&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;scope&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;project&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;name&amp;quot;: &amp;quot;Default&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;                },&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;name&amp;quot;: &amp;quot;admin&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        }&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ^X-Subject-Token: &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;ID_ADMIN_DOMAIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/domains &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;enabled&amp;quot;: true,&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;name&amp;quot;: &amp;quot;admin_domain&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .domain.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ID of domain cloud: &lt;/span&gt;&lt;span class="nv"&gt;$ID_ADMIN_DOMAIN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then we can create our &lt;code&gt;cloud_admin&lt;/code&gt; user, within the &lt;code&gt;admin_domain&lt;/code&gt;
  domain.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ID_CLOUD_ADMIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/users &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;    \&amp;quot;user\&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;description\&amp;quot;: \&amp;quot;Cloud administrator\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;domain_id\&amp;quot;: \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ID_ADMIN_DOMAIN&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;enabled\&amp;quot;: true,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;name\&amp;quot;: \&amp;quot;cloud_admin\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;password\&amp;quot;: \&amp;quot;password\&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    }&lt;/span&gt;
&lt;span class="s2"&gt;}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .user.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ID of user cloud_admin: &lt;/span&gt;&lt;span class="nv"&gt;$ID_CLOUD_ADMIN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And we grant to our user &lt;code&gt;cloud_admin&lt;/code&gt; the &lt;code&gt;admin&lt;/code&gt; role on domain
  &lt;code&gt;admin_domain&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ADMIN_ROLE_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/roles?name&lt;span class="o"&gt;=&lt;/span&gt;admin &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; jq .roles&lt;span class="o"&gt;[&lt;/span&gt;0&lt;span class="o"&gt;]&lt;/span&gt;.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;

curl -X PUT http://localhost:5000/v3/domains/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_ADMIN_DOMAIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/users/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_CLOUD_ADMIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/roles/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ADMIN_ROLE_ID&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -i &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt;

curl http://localhost:5000/v3/domains/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_ADMIN_DOMAIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/users/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_CLOUD_ADMIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/roles&lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .roles
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the &lt;code&gt;admin_domain&lt;/code&gt; has been created with its &lt;code&gt;cloud_admin&lt;/code&gt;
  user, we can enforce a domain based policy. In order to do that, we
  have to copy the &lt;a href="https://github.com/openstack/keystone/blob/master/etc/policy.v3cloudsample.json"&gt;policy.v3cloudsample.json&lt;/a&gt; file over our former
  &lt;code&gt;/etc/keystone/policy.json&lt;/code&gt;, while replacing the string
  &lt;code&gt;admin_domain_id&lt;/code&gt; by the ID of the &lt;code&gt;admin_domain&lt;/code&gt; we just
  created. Locate the &lt;code&gt;policy.v3cloudsample.json&lt;/code&gt; file into the &lt;code&gt;etc&lt;/code&gt;
  directory of Keystone's source.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed s/admin_domain_id/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_ADMIN_DOMAIN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/ &lt;span class="se"&gt;\&lt;/span&gt;
    &amp;lt; policy.v3cloudsample.json &lt;span class="se"&gt;\&lt;/span&gt;
    &amp;gt; /etc/keystone/policy.json
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Warning, current version (commit
19620076f587f925c5d2fa59780c1a80dde15db2) of policy.v3cloudsample.json
doesn't allow &lt;code&gt;cloud_admin&lt;/code&gt; to manage users in other domains than its
own (see &lt;a href="https://bugs.launchpad.net/keystone/+bug/1267187"&gt;bug 1267187&lt;/a&gt;). Until the patch is merged, I suggest using
this &lt;a href="https://review.openstack.org/#/c/65510/"&gt;policy.c3cloudsample.json under review&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Creating domains and admins&lt;/h2&gt;
&lt;p&gt;From now on, the &lt;code&gt;admin&lt;/code&gt; user can only manage projects and users in
the &lt;code&gt;Default&lt;/code&gt; domain. To create other domains we will have to
authenticate with the &lt;code&gt;cloud_admin&lt;/code&gt; user created above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Getting a token scoped on the &lt;code&gt;admin_domain&lt;/code&gt;, for user &lt;code&gt;cloud_admin&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;CLOUD_ADMIN_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/auth/tokens &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -i &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;auth&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;identity&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;methods&amp;quot;: [&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;password&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            ],&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;password&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;user&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                        &amp;quot;name&amp;quot;: &amp;quot;admin_domain&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;                    },&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;name&amp;quot;: &amp;quot;cloud_admin&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;password&amp;quot;: &amp;quot;password&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;                }&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        },&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;scope&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;name&amp;quot;: &amp;quot;admin_domain&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        }&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ^X-Subject-Token: &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating domains &lt;code&gt;dom1&lt;/code&gt; and &lt;code&gt;dom2&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ID_DOM1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/domains &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$CLOUD_ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;enabled&amp;quot;: true,&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;name&amp;quot;: &amp;quot;dom1&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .domain.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ID of dom1: &lt;/span&gt;&lt;span class="nv"&gt;$ID_DOM1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;ID_DOM2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/domains &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$CLOUD_ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;enabled&amp;quot;: true,&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;name&amp;quot;: &amp;quot;dom2&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .domain.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ID of dom2: &lt;/span&gt;&lt;span class="nv"&gt;$ID_DOM2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now we will create a user &lt;code&gt;adm1&lt;/code&gt; in domain &lt;code&gt;dom1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ID_ADM1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/users &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$CLOUD_ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;    \&amp;quot;user\&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;description\&amp;quot;: \&amp;quot;Administrator of domain dom1\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;domain_id\&amp;quot;: \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ID_DOM1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;enabled\&amp;quot;: true,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;name\&amp;quot;: \&amp;quot;adm1\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;password\&amp;quot;: \&amp;quot;password\&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    }&lt;/span&gt;
&lt;span class="s2"&gt;}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .user.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ID of user adm1: &lt;/span&gt;&lt;span class="nv"&gt;$ID_ADM1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We will also grant the &lt;code&gt;admin&lt;/code&gt; role on domain &lt;code&gt;dom1&lt;/code&gt; to this &lt;code&gt;adm1&lt;/code&gt;
  user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl -X PUT http://localhost:5000/v3/domains/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_DOM1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/users/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_ADM1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/roles/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ADMIN_ROLE_ID&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -i &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$CLOUD_ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt;

curl http://localhost:5000/v3/domains/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_DOM1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/users/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_ADM1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/roles &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$CLOUD_ADMIN_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .roles
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Creating projects and users&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;adm1&lt;/code&gt; user can now fully manage domain &lt;code&gt;dom1&lt;/code&gt;. He is allowed to
manage as many projects and users as he wishes within &lt;code&gt;dom1&lt;/code&gt;, while
not being able to access resources of domain &lt;code&gt;dom2&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Now we authenticate as user &lt;code&gt;adm1&lt;/code&gt; with a scope on &lt;code&gt;dom1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ADM1_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/auth/tokens &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -i &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;{&lt;/span&gt;
&lt;span class="s1"&gt;    &amp;quot;auth&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;identity&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;methods&amp;quot;: [&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;password&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            ],&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;password&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;user&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                        &amp;quot;name&amp;quot;: &amp;quot;dom1&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;                    },&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;name&amp;quot;: &amp;quot;adm1&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;                    &amp;quot;password&amp;quot;: &amp;quot;password&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;                }&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        },&lt;/span&gt;
&lt;span class="s1"&gt;        &amp;quot;scope&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;            &amp;quot;domain&amp;quot;: {&lt;/span&gt;
&lt;span class="s1"&gt;                &amp;quot;name&amp;quot;: &amp;quot;dom1&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;            }&lt;/span&gt;
&lt;span class="s1"&gt;        }&lt;/span&gt;
&lt;span class="s1"&gt;    }&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep ^X-Subject-Token: &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We create a project &lt;code&gt;prj1&lt;/code&gt; in domain &lt;code&gt;dom1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ID_PRJ1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/projects &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADM1_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;    \&amp;quot;project\&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;enabled\&amp;quot;: true,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;domain_id\&amp;quot;: \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ID_DOM1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;name\&amp;quot;: \&amp;quot;prj1\&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    }\&lt;/span&gt;
&lt;span class="s2"&gt;}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .project.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ID of prj1: &lt;/span&gt;&lt;span class="nv"&gt;$ID_PRJ1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When trying and creating a project in domain &lt;code&gt;dom2&lt;/code&gt;, it fails.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;curl http://localhost:5000/v3/projects &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADM1_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;    \&amp;quot;project\&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;enabled\&amp;quot;: true,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;domain_id\&amp;quot;: \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ID_DOM2&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;name\&amp;quot;: \&amp;quot;prj2\&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    }\&lt;/span&gt;
&lt;span class="s2"&gt;}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating a standard user &lt;code&gt;usr1&lt;/code&gt; in domain &lt;code&gt;dom1&lt;/code&gt;, with default project &lt;code&gt;prj1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;ID_USR1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/users &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADM1_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;{&lt;/span&gt;
&lt;span class="s2"&gt;    \&amp;quot;user\&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;default_project_id\&amp;quot;: \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ID_PRJ1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;description\&amp;quot;: \&amp;quot;Just a user of dom1\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;domain_id\&amp;quot;: \&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$ID_DOM1&lt;/span&gt;&lt;span class="s2"&gt;\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;enabled\&amp;quot;: true,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;name\&amp;quot;: \&amp;quot;usr1\&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        \&amp;quot;password\&amp;quot;: \&amp;quot;password\&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;    }&lt;/span&gt;
&lt;span class="s2"&gt;}&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .user.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ID of user usr1: &lt;/span&gt;&lt;span class="nv"&gt;$ID_USR1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Granting &lt;code&gt;Member&lt;/code&gt; role to user &lt;code&gt;usr1&lt;/code&gt; on project &lt;code&gt;prj1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;MEMBER_ROLE_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
curl http://localhost:5000/v3/roles?name&lt;span class="o"&gt;=&lt;/span&gt;Member &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADM1_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; jq .roles&lt;span class="o"&gt;[&lt;/span&gt;0&lt;span class="o"&gt;]&lt;/span&gt;.id &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;

curl -X PUT http://localhost:5000/v3/projects/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_PRJ1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/users/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_USR1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/roles/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MEMBER_ROLE_ID&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -i &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADM1_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt;

curl http://localhost:5000/v3/projects/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_PRJ1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/users/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;ID_USR1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/roles &lt;span class="se"&gt;\&lt;/span&gt;
    -s &lt;span class="se"&gt;\&lt;/span&gt;
    -H &lt;span class="s2"&gt;&amp;quot;X-Auth-Token: &lt;/span&gt;&lt;span class="nv"&gt;$ADM1_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq .roles
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The domain administrator &lt;code&gt;adm1&lt;/code&gt; ended up creating a project &lt;code&gt;prj1&lt;/code&gt; and
a user &lt;code&gt;usr1&lt;/code&gt; member of the project. &lt;code&gt;usr1&lt;/code&gt; can now get a token scoped
on &lt;code&gt;prj1&lt;/code&gt; and manage resources into this project.&lt;/p&gt;</summary><category term="OpenStack"></category><category term="Keystone"></category></entry><entry><title>Openstack volume in-use although VM doesn't exist</title><link href="http://www.florentflament.com/blog/openstack-volume-in-use-although-vm-doesnt-exist.html" rel="alternate"></link><updated>2014-01-04T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2014-01-04:blog/openstack-volume-in-use-although-vm-doesnt-exist.html</id><summary type="html">&lt;p&gt;A user at &lt;a href="http://www.cloudwatt.com"&gt;Cloudwatt&lt;/a&gt; had an issue about Cinder volumes with
status &lt;code&gt;in-use&lt;/code&gt;, attached to VMs that didn't exist anymore. I could
find similar bugs referenced in launchpad &lt;a href="https://bugs.launchpad.net/cinder/+bug/1201418"&gt;here&lt;/a&gt; and &lt;a href="https://bugs.launchpad.net/nova/+bug/1096197"&gt;there&lt;/a&gt;,
both with status &lt;code&gt;invalid&lt;/code&gt;... But I didn't succeed in reproducing the
bug (using both the Horizon dashboard and the CLIs) until I got
feedback about what our user was doing.&lt;/p&gt;
&lt;h2&gt;The issue&lt;/h2&gt;
&lt;p&gt;The issue appears when one tries to attach a volume by using the
&lt;code&gt;python-cinderclient&lt;/code&gt; library in some Python code. There are actually
some weird methods for both version of the API.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openstack/python-cinderclient/blob/master/cinderclient/v1/volumes.py"&gt;cinderclient.v1.volumes.VolumeManager.attach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openstack/python-cinderclient/blob/master/cinderclient/v1/volumes.py"&gt;cinderclient.v2.volumes.VolumeManager.attach&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These methods call the Cinder &lt;code&gt;POST /volumes/{volume_id}/action&lt;/code&gt; API,
which is neither documented &lt;a href="http://docs.openstack.org/api/openstack-block-storage/2.0/content/Volumes.html"&gt;here&lt;/a&gt; nor &lt;a href="http://api.openstack.org/api-ref-blockstorage.html"&gt;there&lt;/a&gt;. They can be used
to "set attachment metadata", which according to my opinion has no
good reason to be performed directly by a user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cinderclient.v1.client&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;novaclient.v1_1.client&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Creating manager&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;project_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;auth_url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cinderclient&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;novaclient&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1_1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Getting an image and a flavor to launch our VM&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;fla&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flavors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Creating our resources (vm and volume)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;vm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MyVm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fla&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;display_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MyVol&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Waiting for VM to be spawned&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ACTIVE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Try an attach the volume using the VolumeManager.attach method&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/dev/vdb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;202&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;attachments&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;u&amp;#39;device&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;/dev/vdb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;server_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;3ee03547-7b93-4c8f-9316-bc2adafbd08a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;volume_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;f024883d-4b35-4894-9fbf-51498e6c3c09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;host_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;f024883d-4b35-4894-9fbf-51498e6c3c09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Well it looks like it is attached&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;vm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;3ee03547-7b93-4c8f-9316-bc2adafbd08a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;os-extended-volumes:volumes_attached&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# But actually it isn&amp;#39;t&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;The solution&lt;/h2&gt;
&lt;p&gt;The solution is to use the appropriate method to attach a volume to an
instance. This should be done by using the
&lt;a href="https://github.com/openstack/python-novaclient/blob/master/novaclient/v1_1/volumes.py"&gt;novaclient.v1_1.volumes.VolumeManager.create_server_volume&lt;/a&gt;
method. It actually allows to "attach a volume to a server", which is
what we want to do (And yes the method's name is not super clear).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Let&amp;#39;s continue on the example above&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="c"&gt;# First by clearing our volume attachment&amp;#39;s metadata&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="c"&gt;# to recover a consistent state&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; 
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detach&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Response&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;202&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;attachments&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;os-extended-volumes:volumes_attached&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c"&gt;# Now we can use the VolumeManager.create_server_volume method&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="c"&gt;# to really attach our volume to our vm&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_server_volume&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/dev/vdb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Volume&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;f024883d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;b35&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4894&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="n"&gt;fbf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;51498e6&lt;/span&gt;&lt;span class="n"&gt;c3c09&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;attachments&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;u&amp;#39;device&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;/dev/vdb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;server_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;3ee03547-7b93-4c8f-9316-bc2adafbd08a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;volume_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;f024883d-4b35-4894-9fbf-51498e6c3c09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;host_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;f024883d-4b35-4894-9fbf-51498e6c3c09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nova&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;servers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;os-extended-volumes:volumes_attached&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;u&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;f024883d-4b35-4894-9fbf-51498e6c3c09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;The bug&lt;/h2&gt;
&lt;p&gt;Although, we could argue that the inconsistent state is due to a bad
usage of the client libraries, I do believe that Cinder API (and
therefore python-cinderclient) should not allow the user to put its
resources in an inconsistent state. Moreover, it isn't possible to
recover from such state by using the Horizon dashboard or the CLIs. To
do so, one has to either use the Python client libraries, or update
entries in the database manually...&lt;/p&gt;
&lt;h2&gt;Recovering from inconsistent state&lt;/h2&gt;
&lt;p&gt;One way to recover from a "volume attached to non-existent VM"
inconsistent state, is to manually update entries in the Cinder
database.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mysql cinder
Reading table information &lt;span class="k"&gt;for&lt;/span&gt; completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with &lt;span class="p"&gt;;&lt;/span&gt; or &lt;span class="se"&gt;\g&lt;/span&gt;.
Your MySQL connection id is 1900
Server version: 5.5.34-0ubuntu0.12.04.1-log &lt;span class="o"&gt;(&lt;/span&gt;Ubuntu&lt;span class="o"&gt;)&lt;/span&gt;

Copyright &lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt; 2000, 2013, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &lt;span class="s1"&gt;&amp;#39;help;&amp;#39;&lt;/span&gt; or &lt;span class="s1"&gt;&amp;#39;\h&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; help. Type &lt;span class="s1"&gt;&amp;#39;\c&amp;#39;&lt;/span&gt; to clear the current input statement.

mysql&amp;gt; SELECT id,status,attach_status,mountpoint,instance_uuid from volumes&lt;span class="p"&gt;;&lt;/span&gt;
+--------------------------------------+---------+---------------+------------+--------------------------------------+
&lt;span class="p"&gt;|&lt;/span&gt; id                                   &lt;span class="p"&gt;|&lt;/span&gt; status  &lt;span class="p"&gt;|&lt;/span&gt; attach_status &lt;span class="p"&gt;|&lt;/span&gt; mountpoint &lt;span class="p"&gt;|&lt;/span&gt; instance_uuid                        &lt;span class="p"&gt;|&lt;/span&gt;
+--------------------------------------+---------+---------------+------------+--------------------------------------+
&lt;span class="p"&gt;|&lt;/span&gt; 0580142b-bfb5-4113-8676-4fb783ec05f2 &lt;span class="p"&gt;|&lt;/span&gt; deleted &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL                                 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 1085d96e-ae82-484b-8495-27cc2f25c9c3 &lt;span class="p"&gt;|&lt;/span&gt; deleted &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL                                 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 4fbff7ce-2c9f-4116-ad1e-12f78001da2d &lt;span class="p"&gt;|&lt;/span&gt; deleted &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL                                 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 57b32eaf-7b71-49bf-a8fd-4115567a6cda &lt;span class="p"&gt;|&lt;/span&gt; in-use  &lt;span class="p"&gt;|&lt;/span&gt; attached      &lt;span class="p"&gt;|&lt;/span&gt; /dev/vdb   &lt;span class="p"&gt;|&lt;/span&gt; fa53d190-426b-4ce6-8d36-1af408c25225 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 60a7eb30-9849-4b8d-9ca1-8f554b9a4045 &lt;span class="p"&gt;|&lt;/span&gt; deleted &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL                                 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; a34ca08a-2e6b-4820-b472-91aa27b47261 &lt;span class="p"&gt;|&lt;/span&gt; deleted &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL                                 &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; d827daa5-c8d7-427b-a53c-8be918a1a6fb &lt;span class="p"&gt;|&lt;/span&gt; deleted &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL                                 &lt;span class="p"&gt;|&lt;/span&gt;
+--------------------------------------+---------+---------------+------------+--------------------------------------+
&lt;span class="m"&gt;7&lt;/span&gt; rows in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;

mysql&amp;gt; UPDATE volumes SET &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;available&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;attach_status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;detached&amp;quot;&lt;/span&gt;, &lt;span class="nv"&gt;mountpoint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;NULL, &lt;span class="nv"&gt;instance_uuid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;NULL WHERE &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;57b32eaf-7b71-49bf-a8fd-4115567a6cda&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Query OK, &lt;span class="m"&gt;1&lt;/span&gt; row affected &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;
Rows matched: &lt;span class="m"&gt;1&lt;/span&gt;  Changed: &lt;span class="m"&gt;1&lt;/span&gt;  Warnings: 0

mysql&amp;gt; SELECT id,status,attach_status,mountpoint,instance_uuid from volumes&lt;span class="p"&gt;;&lt;/span&gt;
+--------------------------------------+-----------+---------------+------------+---------------+
&lt;span class="p"&gt;|&lt;/span&gt; id                                   &lt;span class="p"&gt;|&lt;/span&gt; status    &lt;span class="p"&gt;|&lt;/span&gt; attach_status &lt;span class="p"&gt;|&lt;/span&gt; mountpoint &lt;span class="p"&gt;|&lt;/span&gt; instance_uuid &lt;span class="p"&gt;|&lt;/span&gt;
+--------------------------------------+-----------+---------------+------------+---------------+
&lt;span class="p"&gt;|&lt;/span&gt; 0580142b-bfb5-4113-8676-4fb783ec05f2 &lt;span class="p"&gt;|&lt;/span&gt; deleted   &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL          &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 1085d96e-ae82-484b-8495-27cc2f25c9c3 &lt;span class="p"&gt;|&lt;/span&gt; deleted   &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL          &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 4fbff7ce-2c9f-4116-ad1e-12f78001da2d &lt;span class="p"&gt;|&lt;/span&gt; deleted   &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL          &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 57b32eaf-7b71-49bf-a8fd-4115567a6cda &lt;span class="p"&gt;|&lt;/span&gt; available &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL          &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; 60a7eb30-9849-4b8d-9ca1-8f554b9a4045 &lt;span class="p"&gt;|&lt;/span&gt; deleted   &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL          &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; a34ca08a-2e6b-4820-b472-91aa27b47261 &lt;span class="p"&gt;|&lt;/span&gt; deleted   &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL          &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; d827daa5-c8d7-427b-a53c-8be918a1a6fb &lt;span class="p"&gt;|&lt;/span&gt; deleted   &lt;span class="p"&gt;|&lt;/span&gt; detached      &lt;span class="p"&gt;|&lt;/span&gt; NULL       &lt;span class="p"&gt;|&lt;/span&gt; NULL          &lt;span class="p"&gt;|&lt;/span&gt;
+--------------------------------------+-----------+---------------+------------+---------------+
&lt;span class="m"&gt;7&lt;/span&gt; rows in &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;0.00 sec&lt;span class="o"&gt;)&lt;/span&gt;

mysql&amp;gt; Bye
&lt;span class="nv"&gt;$ &lt;/span&gt;cinder list
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
&lt;span class="p"&gt;|&lt;/span&gt;                  ID                  &lt;span class="p"&gt;|&lt;/span&gt;   Status  &lt;span class="p"&gt;|&lt;/span&gt; Name &lt;span class="p"&gt;|&lt;/span&gt; Size &lt;span class="p"&gt;|&lt;/span&gt; Volume Type &lt;span class="p"&gt;|&lt;/span&gt; Bootable &lt;span class="p"&gt;|&lt;/span&gt; Attached to &lt;span class="p"&gt;|&lt;/span&gt;
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
&lt;span class="p"&gt;|&lt;/span&gt; 57b32eaf-7b71-49bf-a8fd-4115567a6cda &lt;span class="p"&gt;|&lt;/span&gt; available &lt;span class="p"&gt;|&lt;/span&gt; vol1 &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;     None    &lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="nb"&gt;false&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;             &lt;span class="p"&gt;|&lt;/span&gt;
+--------------------------------------+-----------+------+------+-------------+----------+-------------+
&lt;/pre&gt;&lt;/div&gt;</summary><category term="OpenStack"></category><category term="Cinder"></category><category term="bug"></category></entry><entry><title>ZNC in Docker container</title><link href="http://www.florentflament.com/blog/znc-in-docker-container.html" rel="alternate"></link><updated>2013-12-15T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2013-12-15:blog/znc-in-docker-container.html</id><summary type="html">&lt;p&gt;&lt;a href="http://wiki.znc.in/ZNC"&gt;ZNC&lt;/a&gt; is a popular IRC bouncer, which stays connected to IRC
channels and log conversations while one isn't connected. This note
desrcibes how to launch ZNC in a &lt;a href="https://www.docker.io/"&gt;Docker&lt;/a&gt; container, so that it be
launched on any Docker enabled platform. To quick start with Docker,
one can follow the steps proposed to &lt;a href="http://docs.docker.io/en/latest/installation/ubuntulinux/"&gt;install Docker on an Ubuntu
Linux&lt;/a&gt; (for instance in a VM).&lt;/p&gt;
&lt;h2&gt;Using ZNC setup wizard&lt;/h2&gt;
&lt;p&gt;Once Docker is installed on the system, we can prepare an image that
will be used to run ZNC with the following &lt;code&gt;Dockerfile&lt;/code&gt; (Docker
configuration file):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FROM ubuntu:precise
MAINTAINER Florent Flament

# Using fr ubuntu mirrors and adding universe repository, to install znc
RUN echo &amp;quot;deb http://fr.archive.ubuntu.com/ubuntu precise main restricted&amp;quot; \
&amp;gt; /etc/apt/sources.list
RUN echo &amp;quot;deb http://fr.archive.ubuntu.com/ubuntu precise universe&amp;quot; \
&amp;gt;&amp;gt; /etc/apt/sources.list

# Installing znc package
RUN apt-get -y update
RUN apt-get -y install znc

# Creating directory to store znc configuration
RUN mkdir -m 775 /var/znc
RUN chgrp daemon /var/znc
USER daemon
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's assume that the &lt;code&gt;Dockerfile&lt;/code&gt; is stored in the &lt;code&gt;znc-noconf&lt;/code&gt;
directory. We can build the ZNC ready image with the following
command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build -t znc:noconf znc-noconf/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next step is to configure ZNC. The following command will run the
configuration wizard in a new container based on the previously
generated image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run -i -t znc:noconf -d /var/znc -c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After having answered to all the questions, ZNC will generate its
configuration files. It will then be ready to run in daemon mode. Now
we can save a Docker image including ZNC's configuration files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ CONT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker ps -a &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;minutes ago&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; head -1 &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker commit &lt;span class="se"&gt;\&lt;/span&gt;
&amp;gt; -run&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{&amp;quot;Cmd&amp;quot;: [&amp;quot;/usr/bin/znc&amp;quot;, &amp;quot;-f&amp;quot;, &amp;quot;-d&amp;quot;, &amp;quot;/var/znc/&amp;quot;], &amp;quot;User&amp;quot;: &amp;quot;daemon&amp;quot;}&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&amp;gt; &lt;span class="nv"&gt;$CONT&lt;/span&gt; znc:ready
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The ZNC image is now ready, and can be launched. In addition to launch
ZNC in a new container, the following command will map the host's 6697
TCP port on the container's 6697 port (assuming that ZNC has been
configured to listen to port 6697).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker run -d -p 6697:6697 znc:ready
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Using a previously made ZNC configuration file&lt;/h2&gt;
&lt;p&gt;One can setup a ZNC Docker container even quicker if he already has a
&lt;code&gt;znc.conf&lt;/code&gt; configuration file. One has to create a directory (for
instance &lt;code&gt;myznc/&lt;/code&gt;) containing both: &lt;code&gt;znc.conf&lt;/code&gt; and a &lt;code&gt;Dockerfile&lt;/code&gt;, with
the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FROM ubuntu:precise
MAINTAINER Florent Flament

# Using fr ubuntu mirrors and adding universe repository, to install znc
RUN echo &amp;quot;deb http://fr.archive.ubuntu.com/ubuntu precise main restricted&amp;quot; \
&amp;gt; /etc/apt/sources.list
RUN echo &amp;quot;deb http://fr.archive.ubuntu.com/ubuntu precise universe&amp;quot; \
&amp;gt;&amp;gt; /etc/apt/sources.list

# Installing znc package
RUN apt-get -y update
RUN apt-get -y install znc

# Creating directory to store znc configuration
RUN mkdir -m 775 /var/znc
# Generates key for SSL exchanges
RUN /usr/bin/znc -d /var/znc -p
# Copies ZNC configuration file
ADD znc.conf /var/znc/configs/
RUN chown -R daemon:daemon /var/znc
USER daemon

# Setting default container&amp;#39;s command
CMD [&amp;quot;/usr/bin/znc&amp;quot;, &amp;quot;-f&amp;quot;, &amp;quot;-d&amp;quot;, &amp;quot;/var/znc/&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then the ZNC container can be launched right after having built the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker build -t znc:myznc myznc/
&lt;span class="nv"&gt;$ &lt;/span&gt;docker run -d -p 6697:6697 znc:myznc
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Update 2014/02/25&lt;/h2&gt;
&lt;p&gt;Here's an example of ZNC configuration file listening for SSL incoming
connexions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Listener4  = +6697

&lt;span class="nt"&gt;&amp;lt;User&lt;/span&gt; &lt;span class="err"&gt;USER1&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Pass       = PASSWORDHASHHERE
        Admin      = true
        Nick       = NICK1
        AltNick    = NICK2
        Ident      = NICK1
        RealName   = REALNAME
        Buffer     = 500
        KeepBuffer = true
        ChanModes  = +stn
        LoadModule = admin
        Server     = irc.freenode.net 6667 
        BindHost   = 0.0.0.0
&lt;span class="nt"&gt;&amp;lt;/User&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;User&lt;/span&gt; &lt;span class="err"&gt;USER2&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Pass       = PASSWORDHASHHERE
        Admin      = true
        Nick       = NICK1
        AltNick    = NICK2
        Ident      = NICK1
        RealName   = REALNAME
        Buffer     = 500
        KeepBuffer = true
        ChanModes  = +stn
        LoadModule = admin
        Server     = CUSTOMIRCSERVER +6697 IRCSERVERPASSWORD
        BindHost   = 0.0.0.0
&lt;span class="nt"&gt;&amp;lt;/User&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;PASSWORDHASHHERE&lt;/code&gt; can be generated by using &lt;code&gt;znc -s&lt;/code&gt;. IRC clients
(like xchat) have to be set up by specifying in the "Server Password"
field a user's credentials &lt;code&gt;&amp;lt;user&amp;gt;:&amp;lt;password&amp;gt;&lt;/code&gt; (i.e
USER1:PASSORDHASHHERE).&lt;/p&gt;</summary><category term="ZNC"></category><category term="Docker"></category><category term="IRC"></category></entry><entry><title>Ubuntu VM auto installation</title><link href="http://www.florentflament.com/blog/ubuntu-vm-auto-installation.html" rel="alternate"></link><updated>2013-11-30T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2013-11-30:blog/ubuntu-vm-auto-installation.html</id><summary type="html">&lt;p&gt;Installing a fresh Ubuntu, or any other Linux distribution, on a new
system is quite forward. The installer asks you a few question about
your country, keyboard, network, ... . Then it installs all the
required packages on the system, and makes it bootable.&lt;/p&gt;
&lt;p&gt;However, when playing with VMs (Virtual Machines), you may wish to
install your distribution many times ; in which case the installation
process (with the questions to answer) becomes somehow tedious.&lt;/p&gt;
&lt;p&gt;There are several approaches to deal with this issue. This post will
deal with the automatic installation of an Ubuntu 12.04 Precise, by
using &lt;a href="http://www.debian.org/releases/stable/i386/apbs02.html.en"&gt;Debian preseeding mecanism&lt;/a&gt; with virt-install (virtinst
package).&lt;/p&gt;
&lt;p&gt;An alternative approach would be to do a manual full installation,
then making several copies of the installed image. Each copy will be
customized to be used for a new VM. These two methods have their pros
and cons, and can be used together.&lt;/p&gt;
&lt;p&gt;A running system with libvirt and virtinst packages is required. The
key of a preseed automatic installation is to have the good
&lt;code&gt;preseed.cfg&lt;/code&gt; file. This file will provide the Debian installer (also
used by Ubuntu) with all the information it requires to install and
configure the system, without the need to ask any question.&lt;/p&gt;
&lt;h2&gt;Preseed file&lt;/h2&gt;
&lt;p&gt;Here's my generic &lt;a href="http://www.florentflament.com/blog/static/preseed.cfg"&gt;preseed.cfg&lt;/a&gt; file. It is a mix of &lt;a href="http://www.debian.org/releases/squeeze/example-preseed.txt"&gt;Debian's
example-preseed&lt;/a&gt; file and parameters gathered using Debian's
suggested method after a manual installation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;debconf-get-selections --installer &amp;gt; file
debconf-get-selections &amp;gt;&amp;gt; file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The password for the &lt;code&gt;vmuser&lt;/code&gt; user has to be set, by changing the
current CRACKMECRACKM encrypted password to a valid one. A valid
crypted password can be generated with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python -c &lt;span class="s1"&gt;&amp;#39;from crypt import crypt; print crypt(&amp;quot;MYPASSWORD&amp;quot;, &amp;quot;SALT&amp;quot;)&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some other parameters may be customized, like locale, user name, ...&lt;/p&gt;
&lt;h2&gt;Empty image creation&lt;/h2&gt;
&lt;p&gt;Then we need to create an empty disk that will be used to install the
system. A 5GB disk should be enough for a minimal Ubuntu installation
(depending on one's requirements).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;qemu-img create vm.qcow2 5G
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;virt-install&lt;/h2&gt;
&lt;p&gt;Installing Ubuntu Precise on a VM can now be launched with the
following unique command (to be customized):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virt-install &lt;span class="se"&gt;\&lt;/span&gt;
--name vm &lt;span class="se"&gt;\&lt;/span&gt;
--ram &lt;span class="m"&gt;128&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
--location http://fr.archive.ubuntu.com/ubuntu/dists/precise-proposed/main/installer-i386/ &lt;span class="se"&gt;\&lt;/span&gt;
--disk vm.qcow2,bus&lt;span class="o"&gt;=&lt;/span&gt;virtio &lt;span class="se"&gt;\&lt;/span&gt;
--graphics vnc,keymap&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;,listen&lt;span class="o"&gt;=&lt;/span&gt;0.0.0.0,port&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5900&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
--network user,model&lt;span class="o"&gt;=&lt;/span&gt;virtio &lt;span class="se"&gt;\&lt;/span&gt;
--initrd-inject preseed.cfg
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the &lt;code&gt;precise-proposed&lt;/code&gt; Ubuntu distribution is used instead
of the standard &lt;code&gt;precise&lt;/code&gt;. It addresses a &lt;a href="https://bugs.launchpad.net/ubuntu/+source/net-retriever/+bug/1067934"&gt;bug that makes the
installation freeze for 10+ minutes&lt;/a&gt; during the components download
phase.&lt;/p&gt;
&lt;p&gt;After some 30 minutes the system installation should be completed.&lt;/p&gt;</summary><category term="Ubuntu"></category><category term="KVM"></category><category term="libvirt"></category></entry><entry><title>Ceph and Cinder multi-backend</title><link href="http://www.florentflament.com/blog/ceph-and-cinder-multi-backend.html" rel="alternate"></link><updated>2013-11-17T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2013-11-17:blog/ceph-and-cinder-multi-backend.html</id><summary type="html">&lt;p&gt;&lt;a href="http://ceph.com/docs/master/"&gt;Ceph's documentation&lt;/a&gt; is quite extensive. However, when trying and
&lt;a href="http://ceph.com/docs/master/rbd/rbd-openstack/"&gt;installing Ceph on a running Openstack platform&lt;/a&gt;, I met two main
issues: How to deal with a multi-backend setup? And how to deal with
several nova-compute nodes?  This note will focus on the steps that I
followed in order to have Ceph running as a Cinder backend (among
other backends), using &lt;a href="http://ceph.com/docs/master/rados/operations/authentication/"&gt;cephx authentication&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Ceph node&lt;/h2&gt;
&lt;p&gt;As described on Ceph's documentation, one has to create a pool on the
Ceph nodes (Ceph's doc provides extensive &lt;a href="http://ceph.com/docs/master/rados/operations/placement-groups/"&gt;documentation about the
number of placement groups that should be used&lt;/a&gt;). The following
command has to be launched on any Ceph node:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ceph osd pool create volumes 128
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Because of cephx authentication, we have to create a new user with the
appropriate rights for cinder and nova to be able to access Ceph's
storage. The following command has to be launched on a Ceph node:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ceph auth get-or-create client.volumes mon &lt;span class="s1"&gt;&amp;#39;allow r&amp;#39;&lt;/span&gt; osd &lt;span class="s1"&gt;&amp;#39;allow class-read object_prefix rbd_children, allow rwx pool=volumes, allow rx pool=images&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The keyring (token used to identify Ceph users) has to be copied on
cinder-volume nodes. The keyring file can be created with the
following command on a Ceph node:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ceph auth get-or-create client.volumes &amp;gt; ceph.client.images.keyring
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Cinder-volume nodes&lt;/h2&gt;
&lt;p&gt;The file created above has to be copied on the cinder-volume nodes, in
the directory &lt;code&gt;/etc/ceph&lt;/code&gt; with the propoer uid and gid:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chown cinder:cinder /etc/ceph/ceph.client.images.keyring
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ceph's configuration file &lt;code&gt;/etc/ceph/ceph.conf&lt;/code&gt; has to be copied at
the same location.&lt;/p&gt;
&lt;p&gt;Then we have to install the following packages on these nodes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-ceph ceph-common
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cinder configuration file &lt;code&gt;/etc/cinder/cinder.conf&lt;/code&gt; has to be updated,
by &lt;a href="https://wiki.openstack.org/wiki/Cinder-multi-backend"&gt;setting a new backend&lt;/a&gt;. A new backend that we'll call &lt;code&gt;ceph&lt;/code&gt;
will be added to the &lt;code&gt;enabled_backends&lt;/code&gt; parameter, and the
corresponding backend section will be created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;enabled_backends&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;former&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ceph&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;former&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ceph&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;volume_driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;volume&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drivers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rbd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RBDDriver&lt;/span&gt;
&lt;span class="n"&gt;volume_backend_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ceph&lt;/span&gt;
&lt;span class="n"&gt;rbd_pool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;volumes&lt;/span&gt;
&lt;span class="n"&gt;glance_api_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="n"&gt;rbd_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;volumes&lt;/span&gt;
&lt;span class="n"&gt;rbd_secret_uuid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;uuid_of_secret&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;rbd_secret_uuid&lt;/code&gt; value cannot be set right now, this parameter
will allow nova to mount Ceph block devices. We will update this value
in a next step.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;scheduler_driver&lt;/code&gt; parameter is not set to FilterScheduler, it
has to be updated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;scheduler_driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cinder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scheduler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter_scheduler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FilterScheduler&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once the configuration file updated, cinder-volume service has to be
restarted to load the new configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service cinder-volume restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And a new volume-type has to be added to Cinder, with the following
command, which has to be called with an adminitrator credentials
(OS_USERNAME, OS_TENANT_NAME and OS_PASSWORD):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cinder &lt;span class="nb"&gt;type&lt;/span&gt;-create ceph
cinder &lt;span class="nb"&gt;type&lt;/span&gt;-key ceph &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;volume_backend_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ceph
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At that point, we should be able to create new Cinder volumes using
Ceph as a backend, with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cinder create --volume-type ceph --display-name ceph-test 1
cinder list
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Nova-compute nodes&lt;/h2&gt;
&lt;p&gt;Now we have to configure our nova-compute nodes to allow our VMs to
mount Ceph block devices. To do that, we have to dump Ceph's
authentication token to a file that we'll use on each nova-compute
node. On a Ceph node:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ceph auth get-key client.volumes &amp;gt; client.volumes.key
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We will also need a &lt;code&gt;secret.xml&lt;/code&gt; file that will be used on each
compute node, with the following initial content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;secret&lt;/span&gt; &lt;span class="na"&gt;ephemeral=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;no&amp;#39;&lt;/span&gt; &lt;span class="na"&gt;private=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;no&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;usage&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ceph&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;client.volumes secret&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/usage&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/secret&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we can copy these two files (&lt;code&gt;client.volumes.key&lt;/code&gt; and
&lt;code&gt;secret.xml&lt;/code&gt;) on any nova-compute node. We'll call this node our first
nova-compute node. On this first node we will define a secret with the
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virsh secret-define --file secret.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The UUID_OF_SECRET displayed has to be copied somewhere, since it will
be used multiple times to configure nova-compute, as well as
cinder-volume. We can then update the secret's value with the
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virsh secret-set-value --secret UUID_OF_SECRET --base64 &lt;span class="k"&gt;$(&lt;/span&gt;cat client.volumes.key&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If using several nova-compute nodes, the &lt;code&gt;secret.xml&lt;/code&gt; file has to be
updated on the first nova-compute node (in order to ensure that the
same UUID_OF_SECRET will be used on each nova-compute node), with the
following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virsh secret-dumpxml UUID_OF_SECRET &amp;gt; secret.xml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then with the new &lt;code&gt;secret.xml&lt;/code&gt; file and the &lt;code&gt;client.volumes.key&lt;/code&gt;
 file, the previous operation has to be repeated on each nova-compute
 node (except the first one that is already configured):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virsh secret-define --file secret.xml
virsh secret-set-value --secret UUID_OF_SECRET --base64 &lt;span class="k"&gt;$(&lt;/span&gt;cat client.volumes.key&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, cinder-volume configuration files &lt;code&gt;/etc/cinder/cinder.conf&lt;/code&gt;
have to be updated with the proper UUID_OF_SECRET value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rbd_secret_uuid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UUID_OF_SECRET&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And cinder-volume service restarted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo service cinder-volume restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After that point, any VM should be able to mount volumes using Ceph
backend!&lt;/p&gt;</summary><category term="Ceph"></category><category term="OpenStack"></category><category term="Cinder"></category></entry><entry><title>Macmini2,1 Linux dual boot</title><link href="http://www.florentflament.com/blog/macmini21-linux-dual-boot.html" rel="alternate"></link><updated>2013-11-03T00:00:00+01:00</updated><author><name>Florent Flament</name></author><id>tag:www.florentflament.com,2013-11-03:blog/macmini21-linux-dual-boot.html</id><summary type="html">&lt;p&gt;While online resources provide documentation about &lt;a href="https://wiki.debian.org/MacMiniIntel"&gt;how to install
Linux on a Mac Mini&lt;/a&gt;, this guide focuses on the Apple Macmini2,1
and its peculiarities. Please refer to &lt;a href="http://en.wikipedia.org/wiki/Macmini#Specifications"&gt;these tables&lt;/a&gt; to properly
identify your hardware.&lt;/p&gt;
&lt;h2&gt;About Macmini2,1&lt;/h2&gt;
&lt;p&gt;Apple provides &lt;a href="http://support.apple.com/kb/HT1237"&gt;firmware updates&lt;/a&gt; for most of its hardware. Most
Mac Minis do have an EFI Boot ROM update available there, but
Macmini2,1 doesn't. The good news is that what is stated on this page
is true, Macmini2,1 doesn't need any firmware update to be able to
boot non MacOS OSes.&lt;/p&gt;
&lt;p&gt;Macmini2,1 is powered by an Intel Core 2 Duo, which is a &lt;a href="http://en.wikipedia.org/wiki/Core_2_duo#64-bit_Core_microarchitecture_based"&gt;64-bit
processor&lt;/a&gt;. However, when trying to install a 64 bits Linux
distribution from a CDROM (by pressing the C key during boot sequence,
right after the startup sound), the installer hangs up on a text
screen, while seemingly starting to display a grub menu (I experienced
this with amd64 ISOs of Debian Wheezy, Debian Jessie and Xubuntu
Precise). With i386 images of these same distributions, the installer
starts in graphic mode without issue.&lt;/p&gt;
&lt;p&gt;However, I could find a way to install a 64 bits OS on the machine, by
booting the machine on a &lt;a href="http://rom-o-matic.net/gpxe/gpxe-git/gpxe.git/contrib/rom-o-matic/"&gt;CDROM launching a PXE installation&lt;/a&gt; over
the network. By using this mechanism, I succeeded in installing an
amd64 Ubuntu Precise Linux distribution. Note that I've been
unsuccessful in starting the computer from a USB key, or directly over
PXE.&lt;/p&gt;
&lt;h2&gt;Setting dual boot&lt;/h2&gt;
&lt;p&gt;On original Max OS X installations, the whole hard disk is occupied by
a unique partition. Therefore, we need to free some space for our new
OS, by resizing the partition. The &lt;code&gt;diskutil&lt;/code&gt; command allows us to do
that. In a shell, we have to launch the following command (where 20G
means that we want to let 20 Gigabytes to our OS X partition. One may
split the disk capacity according to its requirements):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo diskutil resizeVolume disk0s2 20G
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we have to install &lt;a href="http://refit.sourceforge.net/"&gt;rEFit&lt;/a&gt; on the computer. It will allow us
to choose the partition / device to boot, and to resynchronize GPT /
MBR tables as will be covered in a next step.&lt;/p&gt;
&lt;p&gt;We can now insert the Linux distribution installation CD into our Mac
(I downloaded the last &lt;a href="http://www.debian.org/distrib/netinst"&gt;Debian stable i386 netinst ISO&lt;/a&gt; and burned
it to a CD-RW with the Mac Mini's CD burner). When restarting the
computer, rEFit will allow us to boot on the CD.&lt;/p&gt;
&lt;p&gt;During the installation process, we have to create new partition(s)
(for convenience, I chose a distinct / and /home partitions). When
asked to install grub, choose &lt;code&gt;/dev/sda4&lt;/code&gt; (the partition that will be
mounted as /).&lt;/p&gt;
&lt;p&gt;Once the Linux installation is finished, reboot and use rEFit
&lt;code&gt;Partition Tool&lt;/code&gt; to resync GPT / MBR tables. Then boot back to MacOS
and use its &lt;code&gt;bless&lt;/code&gt; tool to make the new OS bootable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;sudo bless --device /dev/disk0s4 -setBoot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Eventually, we can customize the rEFit configuration file
&lt;code&gt;/efi/refit/refit.conf&lt;/code&gt; to make the boot sequence more convenient. The
rEFit menu timeout can be set with the &lt;code&gt;timeout&lt;/code&gt; option. The option
&lt;code&gt;default_selection&lt;/code&gt; (at the end of the file) allows us to choose the
default OS to boot.&lt;/p&gt;
&lt;p&gt;That's it ! Restart, rEFit allows us to choose between booting Mac OS
X and Linux.&lt;/p&gt;</summary><category term="Apple"></category><category term="Linux"></category></entry></feed>